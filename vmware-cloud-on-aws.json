{
    "info": {
        "termsOfService": "https://vmc.vmware.com/terms-and-conditions",
        "contact": {
            "name": "VMware"
        },
        "description": "* All VMware Cloud APIs require a valid authentication token; which can be obtained by issuing a `POST`:\n  ```\n  curl -s -X POST \\\n      -H \"Content-Type: application/json\" \\\n      https://console.cloud.vmware.com/csp/gateway/am/api/auth/api-tokens/authorize?refresh_token={refresh-token}\n  ```\n* This CSP API is defined at: https://console.cloud.vmware.com/csp/gateway/am/api/swagger-ui.html#/Authentication/getAccessTokenByApiRefreshTokenUsingPOST\n\n* The `refresh_token` used to get a valid authentication token can be obtained after successful login to\n  following URL via a web browser: https://console.cloud.vmware.com/csp/gateway/portal/#/user/tokens.\n* Most VMware Cloud APIs require an org identifier.\n  This can be obtained by issuing a `GET` on `/vmc/api/orgs` and extracting the `id` field\n",
        "license": {
            "name": "Copyright (c) 2016-2018 VMware, Inc. All rights reserved."
        },
        "title": "VMware Cloud APIs",
        "version": "1.0",
        "x-vmw-vapi-codegenconfig": {
            "package-name": "com.vmware.vmc",
            "tag-resources-by-url-path": true
        }
    },
    "paths": {
        "/orgs/{org}/tbrs/support-window/{id}": {
            "put": {
                "x-vmc-ui-servicename": "tbrs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SupportWindowId"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Feature does not exist",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Target Support Window ID",
                        "in": "path",
                        "name": "id",
                        "controlName": "id"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "SDDC to move",
                        "name": "sddcId",
                        "schema": {
                            "$ref": "#/definitions/SddcId"
                        },
                        "definition": "SddcId",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "tbrs"
                ],
                "x-vmw-vapi-methodname": "put",
                "description": "Move Sddc to new support window"
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/statistics/dashboard/firewall": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dashboardStatistics"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "$ref": "#/parameters/intervalParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve firewall dashboard statistics for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.statistics.dashboard.firewall",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/publicips/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SddcPublicIp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Cannot find the public IP with given IP address",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "publicips",
                "description": "Get one public IP for a SDDC",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/ipParam"
                    }
                ],
                "tags": [
                    "sddc",
                    "publicip"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get one public IP for a SDDC"
            },
            "delete": {
                "x-vmc-ui-servicename": "publicips",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "The sddc is not in a state that's valid for updates",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access not allowed to the operation for the current user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Cannot find the public IP with given IP address",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/ipParam"
                    }
                ],
                "tags": [
                    "sddc",
                    "publicip"
                ],
                "x-vmw-vapi-methodname": "delete",
                "summary": "Free one public IP for a SDDC"
            },
            "patch": {
                "x-vmc-ui-servicename": "publicips",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "The sddc is not in a state that's valid for updates",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access not allowed to the operation for the current user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Cannot find the public IP with given IP address",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/ipParam"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Type of action as 'attach', 'detach', 'reattach', or 'rename'.\nFor 'attch', the public IP must not be attached and 'associated_private_ip'\nin the payload needs to be set with a workload VM private IP.\nFor 'detach', the public IP must be attached and 'associated_private_ip'\nin the payload should not be set with any value.\nFor 'reattach', the public IP must be attached and 'associated_private_ip'\nin the payload needs to be set with a new workload VM private IP.\nFor 'rename', the 'name' in the payload needs to have a new name string.\n",
                        "in": "query",
                        "name": "action",
                        "controlName": "action",
                        "showSeeMoreDescription": true,
                        "truncatedDescription": "Type of action as 'attach', 'detach', 'reattach', or 'rename'.\nFor 'attch', the public IP must not be attached and 'associated_private_ip'\nin the payload needs to be set with a workload VM private IP."
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "SddcPublicIp object to update",
                        "name": "SddcPublicIp object",
                        "schema": {
                            "$ref": "#/definitions/SddcPublicIp"
                        },
                        "definition": "SddcPublicIp",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "sddc",
                    "publicip"
                ],
                "x-vmw-vapi-methodname": "update",
                "summary": "Attach or detach a public IP to workload VM for a SDDC"
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/nat/config": {
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/nat"
                        },
                        "required": true,
                        "name": "nat",
                        "in": "body",
                        "definition": "Nat",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "update",
                "description": "Modify NAT configuration for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.nat.config",
                "summary": ""
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "delete",
                "description": "Delete all NAT configuration for the specified management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.nat.config",
                "summary": ""
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/nat"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve NAT configuration for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.nat.config",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/dns/statistics": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dnsStatusAndStats"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve DNS server statistics for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.dns.statistics",
                "summary": ""
            }
        },
        "/orgs/{org}/reservations": {
            "get": {
                "x-vmc-ui-servicename": "reservations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/MaintenanceWindowEntry"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access not allowed to the operation for the current user",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ErrorResponse"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    }
                ],
                "tags": [
                    "reservations"
                ],
                "deprecated": true,
                "x-vmw-vapi-methodname": "list",
                "summary": "Get all reservations for this org"
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/ipsec/config": {
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/ipsec"
                        },
                        "required": true,
                        "description": "IPsec Configuration dto object.",
                        "name": "ipsec",
                        "in": "body",
                        "definition": "Ipsec",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "update",
                "description": "Modify IPsec VPN configuration for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.ipsec.config",
                "summary": ""
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "delete",
                "description": "Delete IPsec VPN configuration for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.ipsec.config",
                "summary": ""
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ipsec"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "required": false,
                        "type": "boolean",
                        "description": "Set to true to show sensitive data. Default value is false.",
                        "name": "showSensitiveData",
                        "in": "query",
                        "controlName": "showSensitiveData"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve IPsec VPN configuration for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.ipsec.config",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/firewall/config/rules/{ruleId}": {
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "$ref": "#/parameters/ruleIdParam"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/nsxfirewallrule"
                        },
                        "required": true,
                        "name": "nsxfirewallrule",
                        "in": "body",
                        "definition": "Nsxfirewallrule",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "update",
                "description": "Modify the specified firewall rule for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.firewall.config.rules",
                "summary": ""
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "$ref": "#/parameters/ruleIdParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "delete",
                "description": "Delete a specific firewall rule for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.firewall.config.rules",
                "summary": ""
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/nsxfirewallrule"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "$ref": "#/parameters/ruleIdParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve a specific firewall rule for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.firewall.config.rules",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pagedEdgeList"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Retrieve records matching NSX Edge type ('gatewayServices' or 'distributedRouter'). Specify gatewayServices to find management and compute gateways in your SDDC.",
                        "name": "edgeType",
                        "in": "query",
                        "controlName": "edgeType"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "Provide Edge ID as prevEdgeId to serve as reference for startIndex.",
                        "name": "prevEdgeId",
                        "in": "query",
                        "controlName": "prevEdgeId"
                    },
                    {
                        "in": "query",
                        "description": "Start index for the current page. Default is 0.",
                        "format": "int32",
                        "required": false,
                        "type": "integer",
                        "name": "startIndex",
                        "controlName": "startIndex"
                    },
                    {
                        "in": "query",
                        "description": "Number of records per page. Default is 256.",
                        "format": "int32",
                        "required": false,
                        "type": "integer",
                        "name": "pageSize",
                        "controlName": "pageSize"
                    },
                    {
                        "required": false,
                        "type": "boolean",
                        "description": "Set to true to fetch records in ascending sorted order.",
                        "name": "sortOrderAscending",
                        "in": "query",
                        "controlName": "sortOrderAscending"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "Sort records using one of the column names (id, name, description, tenantId, size, enableFips).",
                        "name": "sortBy",
                        "in": "query",
                        "controlName": "sortBy"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "Filter records matching the NSX Edge ID, name or description.",
                        "name": "filter",
                        "in": "query",
                        "controlName": "filter"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "name": "LDRname",
                        "in": "query",
                        "controlName": "LDRname"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve information about all management and compute gateways and other routers (NSX Edges).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddcId}/addons/{addonType}/credentials": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Credentials created",
                        "schema": {
                            "$ref": "#/definitions/NewCredentials"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Credentials with same name exists with in the scope of addOnType"
                    }
                },
                "x-vmc-ui-servicename": "credentials",
                "description": "Associated a new add on credentials with the SDDC such as HCX",
                "parameters": [
                    {
                        "in": "path",
                        "description": "Org id of the associated SDDC",
                        "format": "uuid",
                        "required": true,
                        "type": "string",
                        "name": "org",
                        "controlName": "org"
                    },
                    {
                        "in": "path",
                        "description": "Id of the SDDC",
                        "format": "uuid",
                        "required": true,
                        "type": "string",
                        "name": "sddcId",
                        "controlName": "sddcId"
                    },
                    {
                        "required": true,
                        "description": "Add on type",
                        "in": "path",
                        "enum": [
                            "HCX"
                        ],
                        "type": "string",
                        "name": "addonType",
                        "controlName": "addonType"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "Credentials creation payload",
                        "name": "credentials",
                        "schema": {
                            "$ref": "#/definitions/NewCredentials"
                        },
                        "definition": "NewCredentials",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "credentials",
                    "sddc",
                    "addons",
                    "hcx"
                ],
                "x-vmw-vapi-methodname": "create",
                "summary": "Associate a new add on credentials with the SDDC such as HCX"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Successfully listed all credentials",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/NewCredentials"
                            },
                            "type": "array"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-vmc-ui-servicename": "credentials",
                "description": "List all the credentials assoicated with an addon type with in a SDDC",
                "parameters": [
                    {
                        "in": "path",
                        "description": "Org id of the associated SDDC",
                        "format": "uuid",
                        "required": true,
                        "type": "string",
                        "name": "org",
                        "controlName": "org"
                    },
                    {
                        "in": "path",
                        "description": "Id of the SDDC",
                        "format": "uuid",
                        "required": true,
                        "type": "string",
                        "name": "sddcId",
                        "controlName": "sddcId"
                    },
                    {
                        "required": true,
                        "description": "Add on type",
                        "in": "path",
                        "enum": [
                            "HCX"
                        ],
                        "type": "string",
                        "name": "addonType",
                        "controlName": "addonType"
                    }
                ],
                "tags": [
                    "credentials",
                    "sddc",
                    "addons",
                    "hcx"
                ],
                "x-vmw-vapi-methodname": "list",
                "summary": "List all the credentials assoicated with an addon type with in a SDDC"
            }
        },
        "/orgs/{org}/account-link/connected-accounts/{linkedAccountPathId}": {
            "delete": {
                "x-vmc-ui-servicename": "connected-accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AwsCustomerConnectedAccount"
                        }
                    },
                    "400": {
                        "description": "An invalid connected account ID was specified, or the connection still has SDDCs active on it.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/linkedAccountIdPathParam"
                    },
                    {
                        "$ref": "#/parameters/forceEvenWhenSddcPresentParam"
                    }
                ],
                "tags": [
                    "account-linking"
                ],
                "x-vmw-vapi-methodname": "delete",
                "summary": "Delete a particular connected (linked) account."
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/sddc/networks/{networkId}": {
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/networkIdParam"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/sddcNetwork"
                        },
                        "required": true,
                        "name": "sddcNetwork",
                        "in": "body",
                        "definition": "SddcNetwork",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "sddc-networks"
                ],
                "x-vmw-vapi-methodname": "update",
                "description": "Modify a network in an SDDC.",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.logical",
                "summary": ""
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/networkIdParam"
                    }
                ],
                "tags": [
                    "sddc-networks"
                ],
                "x-vmw-vapi-methodname": "delete",
                "description": "Delete a network in an SDDC.",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.logical",
                "summary": ""
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/sddcNetwork"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/networkIdParam"
                    }
                ],
                "tags": [
                    "sddc-networks"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve information about a network in an SDDC.",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.logical",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/esxs": {
            "post": {
                "x-vmc-ui-servicename": "esxs",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "The sddc is not in a state that's valid for updates",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access not allowed to the operation for the current user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Cannot find the SDDC with the given identifier",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "If = 'add', will add the esx.\nIf = 'remove', will delete the esx/esxs bound to a single cluster (Cluster Id is mandatory for non cluster 1 esx remove).\nIf = 'force-remove', will delete the esx even if it can lead to data loss (This is an privileged operation).\nIf = 'addToAll', will add esxs to all clusters in the SDDC (This is an privileged operation).\nIf = 'removeFromAll', will delete the esxs from all clusters in the SDDC (This is an privileged operation).\nIf = 'attach-diskgroup', will attach the provided diskgroups to a given host (privileged).\nIf = 'detach-diskgroup', will detach the diskgroups of a given host (privileged).\nDefault behaviour is 'add'\n",
                        "in": "query",
                        "name": "action",
                        "controlName": "action",
                        "showSeeMoreDescription": true,
                        "truncatedDescription": "If = 'add', will add the esx.\nIf = 'remove', will delete the esx/esxs bound to a single cluster (Cluster Id is mandatory for non cluster 1 esx remove).\nIf = 'force-remove', will delete the esx even if"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "esxConfig",
                        "name": "esxConfig",
                        "schema": {
                            "$ref": "#/definitions/EsxConfig"
                        },
                        "definition": "EsxConfig",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "sddc",
                    "esx"
                ],
                "x-vmw-vapi-methodname": "create",
                "summary": "Add/Remove one or more ESX hosts in the target cloud"
            }
        },
        "/orgs/{org}/reservations/{reservation}/mw": {
            "put": {
                "x-vmc-ui-servicename": "reservations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceWindow"
                        }
                    },
                    "400": {
                        "description": "The reservation is not in a state that's valid for updates",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access not allowed to the operation for the current user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict with exiting reservation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/reservationParam"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "Maintenance Window",
                        "name": "window",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceWindow"
                        },
                        "definition": "MaintenanceWindow",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "reservations"
                ],
                "deprecated": true,
                "x-vmw-vapi-methodname": "put",
                "summary": "update the maintenance window for this SDDC"
            },
            "get": {
                "x-vmc-ui-servicename": "reservations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MaintenanceWindowGet"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access not allowed to the operation for the current user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/reservationParam"
                    }
                ],
                "tags": [
                    "reservations"
                ],
                "deprecated": true,
                "x-vmw-vapi-methodname": "get",
                "summary": "get the maintenance window for this SDDC"
            }
        },
        "/orgs/{org}/subscriptions/offer-instances": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OfferInstancesHolder"
                        }
                    },
                    "400": {
                        "description": "Bad Request. Type of the product not supported.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-vmc-ui-servicename": "offer-instances",
                "description": "List all offers available for the specific product type in the specific region\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Region for the offer",
                        "in": "query",
                        "name": "region",
                        "controlName": "region"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Type of the product in offers. *This has been deprecated*. Please use product & type parameters",
                        "in": "query",
                        "name": "product_type",
                        "controlName": "product_type"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "The product that you are trying to purchase, eg. host. This needs to be accompanied by the type parameter",
                        "in": "query",
                        "name": "product",
                        "controlName": "product"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "The type/flavor of the product you are trying it purchase,eg. an `r5.metal` host.\nThis needs to be accompanied by the product parameter.\n",
                        "in": "query",
                        "name": "type",
                        "controlName": "type"
                    }
                ],
                "tags": [
                    "subscription"
                ],
                "x-vmw-vapi-methodname": "list",
                "summary": "List all offers available for the specific product type in the specific region"
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/dns/config": {
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/dnsConfig"
                        },
                        "required": true,
                        "name": "dnsConfig",
                        "in": "body",
                        "definition": "DnsConfig",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "update",
                "description": "Configure DNS server configuration for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.dns.config",
                "summary": ""
            },
            "post": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "required": true,
                        "type": "boolean",
                        "description": "Set to true to enable, set to false to disable.",
                        "name": "enable",
                        "in": "query",
                        "controlName": "enable"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "create",
                "description": "Enable or disable DNS configuration for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.dns.config",
                "summary": ""
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "delete",
                "description": "Delete DNS server configuration for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.dns.config",
                "summary": ""
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dnsConfig"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve DNS server configuration for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.dns.config",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/firewall/config": {
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/firewallConfig"
                        },
                        "required": true,
                        "name": "firewallConfig",
                        "in": "body",
                        "definition": "FirewallConfig",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "update",
                "description": "Configure firewall for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.firewall.config",
                "summary": ""
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "delete",
                "description": "Delete firewall configuration for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.firewall.config",
                "summary": ""
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/firewallConfig"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve the firewall configuration for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.firewall.config",
                "summary": ""
            }
        },
        "/orgs/{org}/providers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AwsCloudProvider"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Organization doesn't exist",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "providers",
                "description": "",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    }
                ],
                "tags": [
                    "orgs"
                ],
                "x-vmw-vapi-methodname": "list",
                "summary": "Get enabled cloud providers for an organization"
            }
        },
        "/orgs/{org}/account-link/sddc-connections": {
            "get": {
                "x-vmc-ui-servicename": "sddc-connection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AwsSddcConnection"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcOptionalRequestParam"
                    }
                ],
                "tags": [
                    "account-linking"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get a list of SDDC connections currently setup for the customer's organization."
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/statistics/interfaces/internal": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cbmStatistics"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "$ref": "#/parameters/startTimeParam"
                    },
                    {
                        "$ref": "#/parameters/endTimeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve internal interface statistics for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.statistics.interfaces.internal",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/clusters/{cluster}/config/constraints": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VsanClusterReconfigConstraints"
                        }
                    },
                    "400": {
                        "description": "Invalid or missing parameters"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-vmc-ui-servicename": "clusterConfigure",
                "description": "This API provides the storage choices available when reconfiguring storage in a cluster. The constraints returned will give vSAN reconfiguration biases and available vSAN capacities per reconfiguration bias. The constraints also indicate the default vSAN capacity per reconfiguration biases as well as the default reconfiguration bias.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/clusterParam"
                    },
                    {
                        "in": "query",
                        "description": "The expected number of hosts in the cluster. If not specified, returned is based on current number of hosts in the cluster.\n",
                        "format": "int32",
                        "required": false,
                        "type": "integer",
                        "name": "expected_num_hosts",
                        "controlName": "expected_num_hosts"
                    }
                ],
                "tags": [
                    "config-storage"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get storage size constraints on existing cluster."
            }
        },
        "/orgs/{org}/sddcs": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK, only if 'validateOnly' param is set to true",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "202": {
                        "description": "Accepted, only if 'validateOnly' param is is set to false",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-vmc-ui-servicename": "sddcs",
                "description": "Provision an SDDC in target cloud",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/validateOnlyParam"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "sddcConfig",
                        "name": "sddcConfig",
                        "schema": {
                            "$ref": "#/definitions/AwsSddcConfig"
                        },
                        "definition": "AwsSddcConfig",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "sddc"
                ],
                "x-vmw-vapi-methodname": "create",
                "summary": "Provision SDDC"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sddc"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-vmc-ui-servicename": "sddcs",
                "description": "List all the SDDCs of an organization",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/includeDeletedParam"
                    }
                ],
                "tags": [
                    "sddc"
                ],
                "x-vmw-vapi-methodname": "list",
                "summary": "List all the SDDCs of an organization"
            }
        },
        "/orgs/{org}/tbrs/reservation": {
            "post": {
                "x-vmc-ui-servicename": "tbrs",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "additionalProperties": {
                                "items": {
                                    "$ref": "#/definitions/ReservationWindow"
                                },
                                "type": "array"
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Call",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "in": "body",
                        "description": "SDDCs and/or states to query",
                        "name": "sddcState",
                        "schema": {
                            "$ref": "#/definitions/SddcStateRequest"
                        },
                        "definition": "SddcStateRequest",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "tbrs"
                ],
                "x-vmw-vapi-methodname": "post",
                "description": "Retreive all reservations for all SDDCs in this org"
            }
        },
        "/orgs/{org}/sddcs/provision-spec": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProvisionSpec"
                        }
                    },
                    "400": {
                        "description": "BadRequest",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.\n",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "provisionSpec",
                "description": "Get sddc provision spec for an org",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    }
                ],
                "tags": [
                    "sddc"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get sddc provision spec for an org"
            }
        },
        "/orgs/{org}": {
            "get": {
                "x-vmc-ui-servicename": "orgs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Organization"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Organization doesn't exist",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    }
                ],
                "tags": [
                    "orgs"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get details of organization"
            }
        },
        "/orgs/{org}/sddcs/{sddcId}/addons/{addonType}/credentials/{name}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Updated credentials",
                        "schema": {
                            "$ref": "#/definitions/NewCredentials"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-vmc-ui-servicename": "credentials",
                "description": "Update credential details",
                "parameters": [
                    {
                        "in": "path",
                        "description": "Org id of the associated SDDC",
                        "format": "uuid",
                        "required": true,
                        "type": "string",
                        "name": "org",
                        "controlName": "org"
                    },
                    {
                        "in": "path",
                        "description": "Id of the SDDC",
                        "format": "uuid",
                        "required": true,
                        "type": "string",
                        "name": "sddcId",
                        "controlName": "sddcId"
                    },
                    {
                        "required": true,
                        "description": "Add on type",
                        "in": "path",
                        "enum": [
                            "HCX"
                        ],
                        "type": "string",
                        "name": "addonType",
                        "controlName": "addonType"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "name of the credentials",
                        "in": "path",
                        "name": "name",
                        "controlName": "name"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "Credentials update payload",
                        "name": "credentials",
                        "schema": {
                            "$ref": "#/definitions/UpdateCredentials"
                        },
                        "definition": "UpdateCredentials",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "credentials",
                    "sddc",
                    "addons",
                    "hcx"
                ],
                "x-vmw-vapi-methodname": "update",
                "summary": "Update credential details"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Get credential details by name",
                        "schema": {
                            "$ref": "#/definitions/NewCredentials"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-vmc-ui-servicename": "credentials",
                "description": "Get credential details by name",
                "parameters": [
                    {
                        "in": "path",
                        "description": "Org id of the associated SDDC",
                        "format": "uuid",
                        "required": true,
                        "type": "string",
                        "name": "org",
                        "controlName": "org"
                    },
                    {
                        "in": "path",
                        "description": "Id of the SDDC",
                        "format": "uuid",
                        "required": true,
                        "type": "string",
                        "name": "sddcId",
                        "controlName": "sddcId"
                    },
                    {
                        "required": true,
                        "description": "Add on type",
                        "in": "path",
                        "enum": [
                            "HCX"
                        ],
                        "type": "string",
                        "name": "addonType",
                        "controlName": "addonType"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "name of the credentials",
                        "in": "path",
                        "name": "name",
                        "controlName": "name"
                    }
                ],
                "tags": [
                    "credentials",
                    "sddc",
                    "addons",
                    "hcx"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get credential details by name"
            }
        },
        "/orgs": {
            "get": {
                "x-vmc-ui-servicename": "orgs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Organization"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "tags": [
                    "orgs"
                ],
                "x-vmw-vapi-methodname": "list",
                "description": "Return a list of all organizations the calling user (based on credential) is authorized on.\n",
                "summary": "Get organizations associated with calling user."
            }
        },
        "/orgs/{org}/tbrs/support-window": {
            "get": {
                "x-vmc-ui-servicename": "tbrs",
                "responses": {
                    "200": {
                        "description": "Success, return list of available Support Windows",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/SupportWindow"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No support windows are available",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/minimumSeatsAvailableFilterParam"
                    },
                    {
                        "$ref": "#/parameters/createdByFilterParam"
                    }
                ],
                "tags": [
                    "tbrs"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Get all available support windows"
            }
        },
        "/orgs/{org}/sddcs/{sddc}/clusters": {
            "post": {
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "The sddc is not in a state that's valid for updates",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access not allowed to the operation for the current user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Cannot find the cluster with the given identifier",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "clusters",
                "description": "Creates a new cluster in customers sddcs with passed clusterConfig.",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "clusterConfig",
                        "name": "clusterConfig",
                        "schema": {
                            "$ref": "#/definitions/ClusterConfig"
                        },
                        "definition": "ClusterConfig",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "sddc"
                ],
                "x-vmw-vapi-methodname": "create",
                "summary": "Add a cluster in the target sddc."
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/dhcp/leaseInfo": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dhcpLeases"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve DHCP leaseinfo of a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.dhcp.leaseinfo",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/convert": {
            "post": {
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "The sddc is not in a state that's valid for updates",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access not allowed to the operation for the current user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Cannot find the SDDC with given identifier",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "sddcs",
                "description": "This API converts a one host SDDC to a four node DEFAULT SDDC. It takes care of configuring and upgrading the vCenter configurations on the SDDC for high availability and data redundancy.",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    }
                ],
                "tags": [
                    "sddc"
                ],
                "x-vmw-vapi-methodname": "create",
                "summary": "Converts a one host SDDC to a four node DEFAULT SDDC."
            }
        },
        "/orgs/{org}/sddcs/{sddc}/publicips": {
            "post": {
                "x-vmc-ui-servicename": "publicips",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "The sddc is not in a state that's valid for updates",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access not allowed to the operation for the current user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Cannot find the SDDC with given identifier",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "allocation spec",
                        "name": "spec",
                        "schema": {
                            "$ref": "#/definitions/SddcAllocatePublicIpSpec"
                        },
                        "definition": "SddcAllocatePublicIpSpec",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "sddc",
                    "publicip"
                ],
                "x-vmw-vapi-methodname": "create",
                "summary": "Allocate public IPs for a SDDC"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/SddcPublicIp"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Cannot find the SDDC with given identifier",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "publicips",
                "description": "list all public IPs for a SDDC",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    }
                ],
                "tags": [
                    "sddc",
                    "publicip"
                ],
                "x-vmw-vapi-methodname": "list",
                "summary": "List all public IPs for a SDDC"
            }
        },
        "/orgs/{org}/sddcs/{sddc}/dns/private": {
            "put": {
                "x-vmc-ui-servicename": "dns-private",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "The sddc is not in a state that's valid for updates or invalid body",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    }
                ],
                "tags": [
                    "sddc",
                    "dns"
                ],
                "x-vmw-vapi-methodname": "update",
                "summary": "Update the DNS records of management VMs to use private IP addresses"
            }
        },
        "/orgs/{org}/sddcs/{sddc}/sddc-template": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SddcTemplate"
                        }
                    },
                    "400": {
                        "description": "SDDC is in a state that cannot be use for generating configuration template"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Cannot find the SDDC with given identifier",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "sddc-template",
                "description": "Get configuration template for  an SDDC",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    }
                ],
                "tags": [
                    "sddc-template"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get configuration template for an SDDC"
            }
        },
        "/orgs/{org}/sddcs/{sddc}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sddc"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Cannot find the SDDC with given identifier",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "sddcs",
                "description": "Get SDDC",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    }
                ],
                "tags": [
                    "sddc"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get SDDC"
            },
            "delete": {
                "x-vmc-ui-servicename": "sddcs",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "The sddc is not in a state that's valid for deletion",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access not allowed to the operation for the current user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Cannot find the SDDC with given identifier",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "required": false,
                        "type": "boolean",
                        "description": "If = 'true', the SDDC's configuration is retained as a template for later use. This flag is applicable only to SDDCs in ACTIVE state.\n",
                        "in": "query",
                        "name": "retain_configuration",
                        "controlName": "retain_configuration"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "Only applicable when retainConfiguration is also set to 'true'. When set, this value will be used as the name of the SDDC configuration template generated.\n",
                        "in": "query",
                        "name": "template_name",
                        "controlName": "template_name"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "If = 'true', will delete forcefully. Beware: do not use the force flag if there is a chance an active provisioning or deleting task is running against this SDDC. This option is restricted.\n",
                        "in": "query",
                        "name": "force",
                        "controlName": "force"
                    }
                ],
                "tags": [
                    "sddc"
                ],
                "x-vmw-vapi-methodname": "delete",
                "summary": "Delete SDDC"
            },
            "patch": {
                "x-vmc-ui-servicename": "sddcs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sddc"
                        }
                    },
                    "400": {
                        "description": "SDDC cannot be patched",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Cannot find the SDDC with given identifier",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "Patch request for the SDDC",
                        "name": "SddcPatchRequest",
                        "schema": {
                            "$ref": "#/definitions/SddcPatchRequest"
                        },
                        "definition": "SddcPatchRequest",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "sddc"
                ],
                "x-vmw-vapi-methodname": "patch",
                "summary": "Patch SDDC"
            }
        },
        "/orgs/{org}/account-link/compatible-subnets-async": {
            "post": {
                "x-vmc-ui-servicename": "compatible-subnets-async",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "description": "The subnet chosen by the customer",
                        "name": "aws_subnet",
                        "schema": {
                            "$ref": "#/definitions/AwsSubnet"
                        },
                        "definition": "AwsSubnet",
                        "type": "object",
                        "controlName": "body"
                    },
                    {
                        "$ref": "#/parameters/orgParam"
                    }
                ],
                "tags": [
                    "account-linking"
                ],
                "x-vmw-vapi-methodname": "post",
                "summary": "Sets which subnet to use to link accounts and finishes the linking process via a task"
            },
            "get": {
                "x-vmc-ui-servicename": "compatible-subnets-async",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/linkedAccountIdParam"
                    },
                    {
                        "$ref": "#/parameters/regionParam"
                    },
                    {
                        "$ref": "#/parameters/sddcOptionalRequestParam"
                    },
                    {
                        "$ref": "#/parameters/instanceTypeParam"
                    },
                    {
                        "$ref": "#/parameters/sddcTypeParam"
                    },
                    {
                        "$ref": "#/parameters/numOfHostsParam"
                    }
                ],
                "tags": [
                    "account-linking"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Gets a customer's compatible subnets for account linking via a task. The information is returned as a member of the task (found in task.params['subnet_list_result'] when you are notified it is complete), and it's documented under ref /definitions/AwsCompatibleSubnets"
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/l2vpn/config/statistics": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/l2vpnStatusAndStats"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve L2 VPN statistics for a compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.l2vpn.config.statistics",
                "summary": ""
            }
        },
        "/orgs/{org}/account-link": {
            "get": {
                "x-vmc-ui-servicename": "accounts",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    }
                ],
                "tags": [
                    "account-linking"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Gets a link that can be used on a customer's account to start the linking process."
            }
        },
        "/orgs/{org}/subscriptions/{subscription}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionDetails"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server error.\nCheck retryable flag to see if request should be retried.\n",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "subscription",
                "description": "Get subscription details for a given subscription id",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/subscriptionParam"
                    }
                ],
                "tags": [
                    "subscription"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get a subscription"
            }
        },
        "/orgs/{org}/subscriptions/products": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/SubscriptionProducts"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "x-vmc-ui-servicename": "products",
                "description": "List of all the products that are available for purchase.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    }
                ],
                "tags": [
                    "subscription"
                ],
                "x-vmw-vapi-methodname": "list",
                "summary": "List of all the products that are available for purchase."
            }
        },
        "/orgs/{org}/sddcs/{sddc}/clusters/{cluster}": {
            "delete": {
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "The sddc is not in a state that's valid for updates",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access not allowed to the operation for the current user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Cannot find the cluster with the given id",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "clusters",
                "description": "This is a force operation which will delete the cluster even if there can be a data loss. Before calling this operation, all the VMs should be powered off.",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/clusterParam"
                    }
                ],
                "tags": [
                    "sddc"
                ],
                "x-vmw-vapi-methodname": "delete",
                "summary": "Delete a cluster."
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/statistics/interfaces": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cbmStatistics"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "$ref": "#/parameters/startTimeParam"
                    },
                    {
                        "$ref": "#/parameters/endTimeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve interface statistics for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.statistics.interfaces",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/sddc/networks": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/sddcNetwork"
                        },
                        "required": true,
                        "name": "sddcNetwork",
                        "in": "body",
                        "definition": "SddcNetwork",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "sddc-networks"
                ],
                "x-vmw-vapi-methodname": "create",
                "description": "Create a network in an SDDC.",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.logical",
                "summary": ""
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DataPageSddcNetwork"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "in": "query",
                        "description": "Page size for pagination.",
                        "format": "int32",
                        "required": false,
                        "type": "integer",
                        "name": "pageSize",
                        "controlName": "pageSize"
                    },
                    {
                        "in": "query",
                        "description": "Start index of page.",
                        "format": "int32",
                        "required": false,
                        "type": "integer",
                        "name": "startIndex",
                        "controlName": "startIndex"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "Previous logical network id.",
                        "name": "prevSddcNetworkId",
                        "in": "query",
                        "controlName": "prevSddcNetworkId"
                    },
                    {
                        "required": false,
                        "type": "boolean",
                        "description": "Sort order ascending.",
                        "name": "sortOrderAscending",
                        "in": "query",
                        "controlName": "sortOrderAscending"
                    }
                ],
                "tags": [
                    "sddc-networks"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve all networks in an SDDC.",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.logical",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/nat/config/rules/{ruleId}": {
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "$ref": "#/parameters/ruleIdParam"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/nsxnatrule"
                        },
                        "required": true,
                        "name": "nsxnatrule",
                        "in": "body",
                        "definition": "Nsxnatrule",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "update",
                "description": "Update the specific NAT rule for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.nat.config.rules",
                "summary": ""
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "$ref": "#/parameters/ruleIdParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "delete",
                "description": "Delete the specific NAT rule for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.nat.config.rules",
                "summary": ""
            }
        },
        "/locale": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/VmcLocale"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-vmc-ui-servicename": "locale",
                "description": "Sets the locale for the session which is used for translating responses.",
                "parameters": [
                    {
                        "required": true,
                        "in": "body",
                        "description": "The locale to be set.",
                        "name": "vmcLocale",
                        "schema": {
                            "$ref": "#/definitions/VmcLocale"
                        },
                        "definition": "VmcLocale",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "locale"
                ],
                "x-vmw-vapi-methodname": "set",
                "summary": "Set locale for the session"
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/firewall/config/rules": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/firewallRules"
                        },
                        "required": true,
                        "name": "firewallRules",
                        "in": "body",
                        "definition": "FirewallRules",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "add",
                "description": "Append firewall rules for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.firewall.config.rules",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/statistics/dashboard/interface": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dashboardStatistics"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "$ref": "#/parameters/intervalParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve interface dashboard statistics for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.statistics.dashboard.interface",
                "summary": ""
            }
        },
        "/orgs/{org}/storage/cluster-constraints": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VsanConfigConstraints"
                        }
                    },
                    "400": {
                        "description": "Invalid or missing parameters"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-vmc-ui-servicename": "storage",
                "description": "Get constraints on cluster storage size for EBS-backed clusters.",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Cloud storage provider ID (example AWS)",
                        "in": "query",
                        "name": "provider",
                        "controlName": "provider"
                    },
                    {
                        "in": "query",
                        "description": "Number of hosts in cluster",
                        "format": "int32",
                        "required": true,
                        "type": "integer",
                        "name": "num_hosts",
                        "controlName": "num_hosts"
                    },
                    {
                        "required": false,
                        "type": "boolean",
                        "description": "Whether this sddc is reduced capacity 1NODE.",
                        "in": "query",
                        "name": "one_node_reduced_capacity",
                        "controlName": "one_node_reduced_capacity"
                    }
                ],
                "tags": [
                    "storage"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get constraints on cluster storage size for EBS-backed clusters."
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/statistics/dashboard/ipsec": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dashboardStatistics"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "$ref": "#/parameters/intervalParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve ipsec dashboard statistics for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.statistics.dashboard.ipsec",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/firewall/statistics/{ruleId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/firewallRuleStats"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "$ref": "#/parameters/ruleIdParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve statistics for a specific firewall rule for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.firewall.statistics",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/status": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/edgeStatus"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "required": false,
                        "type": "boolean",
                        "description": "If true, retrieve the status live from the gateway (NSX Edge). If false, retrieve the latest available status from database.",
                        "name": "getlatest",
                        "in": "query",
                        "controlName": "getlatest"
                    },
                    {
                        "required": false,
                        "type": "boolean",
                        "description": "If true, retrieve detailed status per feature. If false, retrieve aggregated summary of status per feature.",
                        "name": "detailed",
                        "in": "query",
                        "controlName": "detailed"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve the status of the specified management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.status",
                "summary": ""
            }
        },
        "/orgs/{org}/tasks": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Task"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-vmc-ui-servicename": "tasks",
                "description": "List all tasks with optional filtering.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/filterParam"
                    }
                ],
                "tags": [
                    "task"
                ],
                "x-vmw-vapi-methodname": "list",
                "summary": "List all tasks for organization"
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/sddc/cgws/{edgeId}/l2vpn/config": {
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Compute Gateway Edge Identifier",
                        "name": "edgeId",
                        "in": "path",
                        "controlName": "edgeId"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/nsxl2vpn"
                        },
                        "required": true,
                        "name": "nsxl2vpn",
                        "in": "body",
                        "definition": "Nsxl2vpn",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "update",
                "description": "Modify SDDC L2 VPN configuration",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.cgws.l2vpn.config",
                "summary": ""
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Compute Gateway Edge Identifier",
                        "name": "edgeId",
                        "in": "path",
                        "controlName": "edgeId"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "delete",
                "description": "Delete SDDC L2 VPN configuration.",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.cgws.l2vpn.config",
                "summary": ""
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/nsxl2vpn"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Compute Gateway Edge Identifier",
                        "name": "edgeId",
                        "in": "path",
                        "controlName": "edgeId"
                    },
                    {
                        "required": false,
                        "type": "boolean",
                        "name": "showSensitiveData",
                        "in": "query",
                        "controlName": "showSensitiveData"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve SDDC L2 VPN configuration.",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.cgws.l2vpn.config",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/nat/config/rules": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "schema": {
                            "$ref": "#/definitions/natRules"
                        },
                        "required": true,
                        "name": "natRules",
                        "in": "body",
                        "definition": "NatRules",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "add",
                "description": "Append a NAT rule for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.nat.config.rules",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/statistics/interfaces/uplink": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cbmStatistics"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided."
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "$ref": "#/parameters/startTimeParam"
                    },
                    {
                        "$ref": "#/parameters/endTimeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve uplink interface statistics for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.statistics.interfaces.uplink",
                "summary": ""
            }
        },
        "/orgs/{org}/subscriptions": {
            "post": {
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Server error.\nCheck retryable flag to see if request should be retried.\n",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "subscriptions",
                "description": "Initiates the creation of a subscription",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "subscriptionRequest",
                        "name": "subscriptionRequest",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionRequest"
                        },
                        "definition": "SubscriptionRequest",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "subscription"
                ],
                "x-vmw-vapi-methodname": "create",
                "summary": "Create a subscription"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/SubscriptionDetails"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Server error.\nCheck retryable flag to see if request should be retried.\n",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "subscriptions",
                "description": "Returns all subscriptions for a given org id",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/offerTypeQueryParam"
                    }
                ],
                "tags": [
                    "subscription"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get all subscriptions"
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/vnics": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vnics"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve all interfaces for the specified management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.vnics",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/clusters/{cluster}/reconfigure": {
            "post": {
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The SDDC is not in a valid state.\n",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Access not allowed to the operation for the current user",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Cannot find the cluster with the given id",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "clusters",
                "description": "This reconfiguration will handle changing both the number of hosts and the cluster storage capacity.",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/clusterParam"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "clusterReconfigureParams",
                        "name": "clusterReconfigureParams",
                        "schema": {
                            "$ref": "#/definitions/ClusterReconfigureParams"
                        },
                        "definition": "ClusterReconfigureParams",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "sddc",
                    "clusters"
                ],
                "x-vmw-vapi-methodname": "clusterReconfig",
                "summary": "Initiate a reconfiguration for the cluster."
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/ipsec/statistics": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/IpsecStatusAndStats"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve IPsec VPN statistics for a management or compute gateway (NSX Edge).",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.ipsec.statistics",
                "summary": ""
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networks/4.0/edges/{edgeId}/peerconfig": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "additionalProperties": {},
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad request. Request object passed is invalid."
                    },
                    "403": {
                        "description": "Forbidden. Authorization header not provided"
                    },
                    "404": {
                        "description": "Not found. Requested object not found."
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/edgeParam"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Specify object type identifier. Valid value is 'ipsecSiteConfig'. Required.",
                        "name": "objecttype",
                        "in": "query",
                        "controlName": "objecttype"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "Specify object identifier, for example 'ipsecsite-1' for IPsec Site configuration. Required.",
                        "name": "objectid",
                        "in": "query",
                        "controlName": "objectid"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "Specify template identifier and response format. Valid values are 'text', 'json' and 'xml'. Default is 'text'. Optional.",
                        "name": "templateid",
                        "in": "query",
                        "controlName": "templateid"
                    }
                ],
                "tags": [
                    "edges"
                ],
                "x-vmw-vapi-methodname": "get",
                "description": "Retrieve IPsec VPN peer configuration for a management or compute gateway (NSX Edge). The response output is free form text generated as per the template specified as request parameter input.",
                "x-vmw-vapi-servicename": "orgs.sddcs.networks.edges.peerconfig",
                "summary": ""
            }
        },
        "/orgs/{org}/sddc-templates/{templateId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SddcTemplate"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Cannot find the SDDC Template with given identifier",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "sddc-template",
                "description": "Get configuration template by given template id.",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/templateIdParam"
                    }
                ],
                "tags": [
                    "sddc-template"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get configuration template by given template id."
            },
            "delete": {
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-vmc-ui-servicename": "sddc-template",
                "description": "Delete SDDC template identified by given id.",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/templateIdParam"
                    }
                ],
                "tags": [
                    "sddc-template"
                ],
                "x-vmw-vapi-methodname": "delete",
                "summary": "Delete SDDC template identified by given id."
            }
        },
        "/orgs/{org}/sddcs/{sddc}/management-vms/{managementVmId}/dns/{ipType}": {
            "put": {
                "x-vmc-ui-servicename": "management-vms",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "The sddc is not in a state that's valid for updates or invalid body",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "$ref": "#/parameters/managementVmIdParam"
                    },
                    {
                        "$ref": "#/parameters/ipTypeParam"
                    }
                ],
                "tags": [
                    "sddc",
                    "dns"
                ],
                "x-vmw-vapi-methodname": "update",
                "summary": "Update the DNS records of management VMs to use public or private IP addresses"
            }
        },
        "/orgs/{org}/account-link/map-customer-zones": {
            "post": {
                "x-vmc-ui-servicename": "customer-zone-mapping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "The zones request information about who to map and what to map.",
                        "name": "mapZonesRequest",
                        "schema": {
                            "$ref": "#/definitions/MapZonesRequest"
                        },
                        "definition": "MapZonesRequest",
                        "type": "object",
                        "controlName": "body"
                    }
                ],
                "tags": [
                    "account-linking"
                ],
                "x-vmw-vapi-methodname": "post",
                "summary": "Creates a task to re-map customer's datacenters across zones."
            }
        },
        "/orgs/{org}/account-link/compatible-subnets": {
            "post": {
                "x-vmc-ui-servicename": "compatible-subnets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AwsSubnet"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    }
                ],
                "tags": [
                    "account-linking"
                ],
                "x-vmw-vapi-methodname": "post",
                "summary": "Sets which subnet to use to link accounts and finishes the linking process"
            },
            "get": {
                "x-vmc-ui-servicename": "compatible-subnets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AwsCompatibleSubnets"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/linkedAccountIdParam"
                    },
                    {
                        "$ref": "#/parameters/regionParam"
                    },
                    {
                        "$ref": "#/parameters/sddcOptionalRequestParam"
                    },
                    {
                        "$ref": "#/parameters/forceRefreshParam"
                    },
                    {
                        "$ref": "#/parameters/instanceTypeParam"
                    },
                    {
                        "$ref": "#/parameters/sddcTypeParam"
                    },
                    {
                        "$ref": "#/parameters/numOfHostsParam"
                    }
                ],
                "tags": [
                    "account-linking"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Gets a customer's compatible subnets for account linking"
            }
        },
        "/orgs/{org}/account-link/connected-accounts": {
            "get": {
                "x-vmc-ui-servicename": "connected-accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AwsCustomerConnectedAccount"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/cloudProviderOptionalRequestParam"
                    }
                ],
                "tags": [
                    "account-linking"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get a list of connected accounts"
            }
        },
        "/orgs/{org}/tasks/{task}": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "Invalid action or bad argument",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Cannot find the task with given identifier",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "tasks",
                "description": "Request that a running task be canceled.\nThis is advisory only, some tasks may not be cancelable, and some tasks might take\nan arbitrary amount of time to respond to a cancelation request. The task must be monitored\nto determine subsequent status.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/taskParam"
                    },
                    {
                        "required": false,
                        "type": "string",
                        "description": "If = 'cancel', task will be canceled",
                        "in": "query",
                        "name": "action",
                        "controlName": "action"
                    }
                ],
                "tags": [
                    "task"
                ],
                "x-vmw-vapi-methodname": "update",
                "summary": "Modify an existing task"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Cannot find the task with given identifier",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-vmc-ui-servicename": "tasks",
                "description": "Retrieve details of a task.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/taskParam"
                    }
                ],
                "tags": [
                    "task"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Get task details"
            }
        },
        "/orgs/{org}/sddcs/{sddc}/dns/public": {
            "put": {
                "x-vmc-ui-servicename": "dns-public",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "The sddc is not in a state that's valid for updates or invalid body",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    }
                ],
                "tags": [
                    "sddc",
                    "dns"
                ],
                "x-vmw-vapi-methodname": "update",
                "summary": "Update the DNS records of management VMs to use public IP addresses"
            }
        },
        "/orgs/{org}/sddcs/{sddc}/networking/connectivity-tests": {
            "post": {
                "x-vmc-ui-servicename": "network-connectivity-checker",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    },
                    {
                        "required": true,
                        "in": "body",
                        "description": "request information",
                        "name": "request_info",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityValidationGroup"
                        },
                        "definition": "ConnectivityValidationGroup",
                        "type": "object",
                        "controlName": "body"
                    },
                    {
                        "required": true,
                        "type": "string",
                        "description": "If = 'start', start connectivity tests.\n",
                        "in": "query",
                        "name": "action",
                        "controlName": "action"
                    }
                ],
                "tags": [
                    "network",
                    "troubleshooting"
                ],
                "x-vmw-vapi-methodname": "post",
                "summary": "ConnectivityValidationGroupResultWrapper will be  available at task.params['test_result']."
            },
            "get": {
                "x-vmc-ui-servicename": "network-connectivity-checker",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "schema": {
                            "$ref": "#/definitions/ConnectivityValidationGroups"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    },
                    {
                        "$ref": "#/parameters/sddcParam"
                    }
                ],
                "tags": [
                    "network",
                    "troubleshooting"
                ],
                "x-vmw-vapi-methodname": "get",
                "summary": "Retrieve metadata for connectivity tests."
            }
        },
        "/orgs/{org}/sddc-templates": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/SddcTemplate"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-vmc-ui-servicename": "sddc-templates",
                "description": "List all available SDDC configuration templates in an organization",
                "parameters": [
                    {
                        "$ref": "#/parameters/orgParam"
                    }
                ],
                "tags": [
                    "sddc-template"
                ],
                "x-vmw-vapi-methodname": "list",
                "summary": "List all available SDDC configuration templates in an organization"
            }
        }
    },
    "schemes": [
        "https"
    ],
    "parameters": {
        "templateIdParam": {
            "type": "string",
            "description": "SDDC Template identifier",
            "in": "path",
            "name": "templateId",
            "controlName": "templateId"
        },
        "sddcOptionalRequestParam": {
            "type": "string",
            "description": "sddc",
            "in": "query",
            "name": "sddc",
            "controlName": "sddc"
        },
        "regionParam": {
            "type": "string",
            "description": "The region of the cloud resources to work in",
            "in": "query",
            "name": "region",
            "controlName": "region"
        },
        "managementVmIdParam": {
            "type": "string",
            "description": "the management VM ID",
            "in": "path",
            "name": "managementVmId",
            "controlName": "managementVmId"
        },
        "includeDeletedParam": {
            "type": "boolean",
            "description": "When true, forces the result to also include deleted SDDCs.",
            "in": "query",
            "name": "includeDeleted",
            "controlName": "includeDeleted"
        },
        "numOfHostsParam": {
            "type": "integer",
            "description": "The number of hosts",
            "in": "query",
            "name": "numOfHosts",
            "controlName": "numOfHosts"
        },
        "createdByFilterParam": {
            "type": "string",
            "description": "user name which was used to create the support window (used as a filter)",
            "in": "query",
            "name": "createdBy",
            "controlName": "createdBy"
        },
        "ruleIdParam": {
            "in": "path",
            "description": "Rule Identifier.",
            "format": "int64",
            "type": "integer",
            "name": "ruleId",
            "controlName": "ruleId"
        },
        "edgeParam": {
            "type": "string",
            "description": "Edge Identifier.",
            "name": "edgeId",
            "in": "path",
            "controlName": "edgeId"
        },
        "sddcTypeParam": {
            "type": "string",
            "description": "The sddc type to be used. (1NODE, SingleAZ, MultiAZ)",
            "in": "query",
            "name": "sddcType",
            "controlName": "sddcType"
        },
        "sddcParam": {
            "type": "string",
            "description": "Sddc Identifier.",
            "name": "sddc",
            "in": "path",
            "controlName": "sddc"
        },
        "orgParam": {
            "type": "string",
            "description": "Organization identifier.",
            "name": "org",
            "in": "path",
            "controlName": "org"
        },
        "taskParam": {
            "type": "string",
            "description": "Task identifier",
            "in": "path",
            "name": "task",
            "controlName": "task"
        },
        "instanceTypeParam": {
            "type": "string",
            "description": "The server instance type to be used.",
            "in": "query",
            "name": "instanceType",
            "controlName": "instanceType"
        },
        "validateOnlyParam": {
            "type": "boolean",
            "description": "When true, only validates the given sddc configuration without provisioning.",
            "in": "query",
            "name": "validateOnly",
            "controlName": "validateOnly"
        },
        "clusterParam": {
            "type": "string",
            "description": "cluster identifier",
            "in": "path",
            "name": "cluster",
            "controlName": "cluster"
        },
        "reservationParam": {
            "type": "string",
            "description": "Reservation Identifier",
            "in": "path",
            "name": "reservation",
            "controlName": "reservation"
        },
        "forceRefreshParam": {
            "type": "boolean",
            "description": "When true, forces the mappings for datacenters to be refreshed for the connected account.",
            "in": "query",
            "name": "forceRefresh",
            "controlName": "forceRefresh"
        },
        "filterParam": {
            "type": "string",
            "description": "Filter expression\n\nBinary Operators: 'eq', 'ne', 'lt', 'gt', 'le', 'ge', 'mul', 'div', 'mod', 'sub', 'add'\nUnary Operators: 'not', '-' (minus)\nString Operators: 'startswith', 'endswith', 'length', 'contains', 'tolower', 'toupper',\n\nNested attributes are composed using '.'\n\nDates must be formatted as yyyy-MM-dd or yyyy-MM-ddTHH:mm:ss[.SSS]Z\n\nStrings should enclosed in single quotes, escape single quote with two single quotes\n\nThe special literal 'created' will be mapped to the time the resource was first created.\n\nExamples:\n\n  - $filter=(updated gt 2016-08-09T13:00:00Z) and (org_id eq 278710ff4e-6b6d-4d4e-aefb-ca637f38609e)\n  - $filter=(created eq 2016-08-09)\n  - $filter=(created gt 2016-08-09) and (sddc.status eq 'READY')\n",
            "in": "query",
            "name": "$filter",
            "controlName": "$filter"
        },
        "linkedAccountIdPathParam": {
            "type": "string",
            "description": "The linked connected account identifier",
            "in": "path",
            "name": "linkedAccountPathId",
            "controlName": "linkedAccountPathId"
        },
        "forceEvenWhenSddcPresentParam": {
            "type": "boolean",
            "description": "When true, forcibly removes a connected account even when SDDC's are still linked to it.",
            "in": "query",
            "name": "forceEvenWhenSddcPresent",
            "controlName": "forceEvenWhenSddcPresent"
        },
        "endTimeParam": {
            "in": "query",
            "description": "Show statistics until this end time (in milliseconds since epoch).",
            "format": "int64",
            "type": "integer",
            "name": "endTime",
            "controlName": "endTime"
        },
        "offerTypeQueryParam": {
            "description": "Offer Type\n * `ON_DEMAND` - on-demand subscription\n * `TERM` - term subscription\n * All subscriptions if not specified\n",
            "in": "query",
            "enum": [
                "TERM",
                "ON_DEMAND"
            ],
            "type": "string",
            "name": "offer_type",
            "controlName": "offer_type"
        },
        "subscriptionParam": {
            "type": "string",
            "description": "SubscriptionId for an sddc.",
            "in": "path",
            "name": "subscription",
            "controlName": "subscription"
        },
        "ipTypeParam": {
            "description": "the ip type to associate with FQDN in DNS",
            "in": "path",
            "enum": [
                "public",
                "private"
            ],
            "type": "string",
            "name": "ipType",
            "controlName": "ipType"
        },
        "linkedAccountIdParam": {
            "type": "string",
            "description": "The linked connected account identifier",
            "in": "query",
            "name": "linkedAccountId",
            "controlName": "linkedAccountId"
        },
        "ipParam": {
            "type": "string",
            "description": "ip allocation id",
            "in": "path",
            "name": "id",
            "controlName": "id"
        },
        "intervalParam": {
            "type": "string",
            "description": "60 min by default, can be given as 1 - 60 min, oneDay, oneWeek, oneMonth, oneYear.",
            "name": "interval",
            "in": "query",
            "controlName": "interval"
        },
        "startTimeParam": {
            "in": "query",
            "description": "Show statistics from this start time (in milliseconds since epoch).",
            "format": "int64",
            "type": "integer",
            "name": "startTime",
            "controlName": "startTime"
        },
        "networkIdParam": {
            "type": "string",
            "description": "Logical Network Identifier",
            "name": "networkId",
            "in": "path",
            "controlName": "networkId"
        },
        "cloudProviderOptionalRequestParam": {
            "type": "string",
            "description": "The cloud provider of the SDDC (AWS or ZeroCloud). Default value is AWS.",
            "in": "query",
            "name": "provider",
            "controlName": "provider"
        },
        "minimumSeatsAvailableFilterParam": {
            "type": "integer",
            "description": "minimum seats available (used as a filter)",
            "in": "query",
            "name": "minimumSeatsAvailable",
            "controlName": "minimumSeatsAvailable"
        }
    },
    "tags": [
        {
            "name": "orgs",
            "description": "Organizations"
        },
        {
            "name": "subscription",
            "description": "Subscriptions"
        },
        {
            "name": "task",
            "description": "Tasks"
        },
        {
            "name": "sddc",
            "description": "SDDCs"
        },
        {
            "name": "publicip",
            "description": "SDDC Public IPs"
        },
        {
            "name": "esx",
            "description": "ESX Hosts"
        },
        {
            "name": "network",
            "description": "SDDC Networks"
        },
        {
            "name": "dns",
            "description": "DNS"
        },
        {
            "name": "reservations",
            "description": "Reservations and Maintenance Windows"
        },
        {
            "name": "account-linking",
            "description": "AWS Account Connection Operations"
        },
        {
            "name": "sddc-template",
            "description": "SDDC Configuration Template"
        },
        {
            "name": "troubleshooting",
            "description": "Network Troubleshooting"
        },
        {
            "name": "tbrs",
            "description": "Ticket Based Reservation Service"
        },
        {
            "name": "storage",
            "description": "General storage APIs"
        },
        {
            "name": "config-storage",
            "description": "Storage configuration APIs"
        },
        {
            "name": "edges",
            "description": "Operations on management and compute gateway (NSX Edges)."
        },
        {
            "name": "sddc-networks",
            "description": "Operations on SDDC Networks."
        }
    ],
    "basePath": "/vmc/api",
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "csp-auth-token",
            "in": "header"
        }
    },
    "host": "vmc.vmware.com",
    "definitions": {
        "EsxHostInfo": {
            "type": "object",
            "properties": {
                "instance_type": {
                    "type": "string",
                    "description": "Backing cloud provider instance type for cluster."
                }
            }
        },
        "MaintenanceWindowEntry": {
            "type": "object",
            "properties": {
                "in_maintenance_window": {
                    "type": "boolean",
                    "description": "true if the SDDC is in the defined Mainentance Window"
                },
                "reservation_schedule": {
                    "$ref": "#/definitions/ReservationSchedule"
                },
                "reservation_id": {
                    "type": "string",
                    "description": "ID for reservation",
                    "format": "uuid"
                },
                "in_maintenance_mode": {
                    "type": "boolean",
                    "description": "true if the SDDC is currently undergoing maintenance"
                },
                "sddc_id": {
                    "type": "string",
                    "description": "SDDC ID for this reservation",
                    "format": "uuid"
                }
            }
        },
        "sites": {
            "type": "object",
            "properties": {
                "sites": {
                    "items": {
                        "$ref": "#/definitions/nsxsite"
                    },
                    "type": "array"
                }
            },
            "description": "L2 VPN sites."
        },
        "FirewallService": {
            "type": "object",
            "properties": {
                "protocol": {
                    "type": "string",
                    "description": "protocol name, such as 'tcp', 'udp' etc."
                },
                "ports": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "a list of port numbers and port ranges, such as {80, 91-95, 99}. If not specified, defaults to 'any'."
                }
            }
        },
        "Metadata": {
            "type": "object",
            "description": "metadata of the sddc manifest",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "description": "the timestamp for the bundle"
                },
                "cycle_id": {
                    "type": "string",
                    "description": "the cycle id"
                }
            }
        },
        "dnsListeners": {
            "allOf": [
                {
                    "$ref": "#/definitions/ipAddresses"
                },
                {
                    "type": "object",
                    "properties": {
                        "vnic": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "description": "Vnic for DNS listener."
                        },
                        "type": {
                            "type": "string"
                        }
                    },
                    "description": "Dns Listeners"
                }
            ]
        },
        "dhcpLeases": {
            "type": "object",
            "properties": {
                "timeStamp": {
                    "type": "integer",
                    "description": "The timestamp of the DHCP lease.",
                    "format": "int64"
                },
                "hostLeaseInfosDto": {
                    "description": "DHCP lease information.",
                    "$ref": "#/definitions/dhcpLeaseInfo"
                }
            },
            "description": "DHCP leases information"
        },
        "dnsViews": {
            "type": "object",
            "properties": {
                "dnsView": {
                    "items": {
                        "$ref": "#/definitions/dnsView"
                    },
                    "type": "array",
                    "description": "List of DNS views."
                }
            },
            "description": "DNS views."
        },
        "TermBillingOptions": {
            "properties": {
                "unit_price": {
                    "type": "string"
                },
                "billing_frequency": {
                    "type": "string"
                }
            },
            "type": "object",
            "example": {
                "unit_price": "121518.0",
                "billing_frequency": "PREPAID"
            },
            "description": "Holder for term billing options."
        },
        "ObjectType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "edgeJob": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Job status."
                },
                "edgeId": {
                    "type": "string",
                    "description": "NSX Edge ID."
                },
                "module": {
                    "type": "string",
                    "description": "Module information."
                },
                "jobId": {
                    "type": "string",
                    "description": "Job ID."
                },
                "errorCode": {
                    "type": "string",
                    "description": "Error code identifying the failure of the configuration change."
                },
                "result": {
                    "items": {
                        "$ref": "#/definitions/result"
                    },
                    "type": "array",
                    "description": "Job result information."
                },
                "startTime": {
                    "type": "string",
                    "description": "Job start time.",
                    "format": "date-time"
                },
                "message": {
                    "type": "string",
                    "description": "Job message."
                },
                "endTime": {
                    "type": "string",
                    "description": "Job end time.",
                    "format": "date-time"
                }
            },
            "description": "Job status information for the configuration change carried out on NSX Edge."
        },
        "SupportWindowId": {
            "type": "object",
            "properties": {
                "window_id": {
                    "type": "string",
                    "description": "Support Window ID"
                }
            }
        },
        "Organization": {
            "required": [
                "display_name",
                "id",
                "name",
                "project_state",
                "version"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractEntity"
                },
                {
                    "properties": {
                        "org_type": {
                            "type": "string",
                            "description": "ORG_TYPE to be associated with the org",
                            "example": "CUSTOMER"
                        },
                        "display_name": {
                            "type": "string",
                            "example": "My VMC Org"
                        },
                        "name": {
                            "type": "string"
                        },
                        "project_state": {
                            "enum": [
                                "CREATED",
                                "DELETED"
                            ],
                            "type": "string"
                        },
                        "properties": {
                            "$ref": "#/definitions/OrgProperties"
                        }
                    }
                }
            ]
        },
        "OfferType": {
            "enum": [
                "TERM",
                "ON_DEMAND"
            ],
            "type": "string"
        },
        "RouteTableInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "route table name"
                },
                "id": {
                    "type": "string",
                    "description": "route table id"
                }
            }
        },
        "SubscriptionRequest": {
            "required": [
                "offer_name",
                "offer_version",
                "product_type",
                "commitment_term",
                "region",
                "quantity"
            ],
            "type": "object",
            "properties": {
                "product": {
                    "type": "string",
                    "description": "The product for which subscription needs to be created. Refer /vmc/api/orgs/{orgId}/products."
                },
                "product_type": {
                    "type": "string",
                    "description": "Old identifier for product. *Deprecarted*. See product and type"
                },
                "product_id": {
                    "type": "string"
                },
                "billing_frequency": {
                    "type": "string",
                    "description": "Frequency of the billing."
                },
                "region": {
                    "type": "string"
                },
                "commitment_term": {
                    "type": "string"
                },
                "offer_context_id": {
                    "type": "string"
                },
                "offer_version": {
                    "type": "string"
                },
                "offer_name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the product for which the subscription needs to be created."
                },
                "price": {
                    "type": "integer"
                },
                "product_charge_id": {
                    "type": "string"
                }
            },
            "example": {
                "product": "host",
                "product_type": "host - deprecated",
                "billing_frequency": "MONTHLY",
                "region": "US_WEST_2",
                "commitment_term": "12",
                "offer_name": "VMware Cloud on AWS",
                "type": "i3.metal",
                "offer_version": "1.0",
                "quantity": 1
            }
        },
        "edgeVnicAddressGroups": {
            "type": "object",
            "properties": {
                "addressGroups": {
                    "items": {
                        "$ref": "#/definitions/edgeVnicAddressGroup"
                    },
                    "type": "array",
                    "description": "Address group configuration of the NSX Edge vnic. Vnic can be configured to have more than one address group/subnets."
                }
            },
            "description": "NSX Edge vnic address group configuration details."
        },
        "dnsResponseStats": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "formErr": {
                    "type": "integer",
                    "format": "int64"
                },
                "nxDomain": {
                    "type": "integer",
                    "format": "int64"
                },
                "success": {
                    "type": "integer",
                    "format": "int64"
                },
                "serverFail": {
                    "type": "integer",
                    "format": "int64"
                },
                "nxrrset": {
                    "type": "integer",
                    "format": "int64"
                },
                "others": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "description": "DNS response statistics."
        },
        "Agent": {
            "discriminator": "provider",
            "required": [
                "provider"
            ],
            "type": "object",
            "properties": {
                "internal_ip": {
                    "type": "string",
                    "description": "The internal IP address of the agent which is provided by the underlying cloud provider"
                },
                "agent_url": {
                    "type": "string",
                    "description": "The accessible URL of the agent service, it is resolved to public IP address from the Internet and private IP address within SDDC"
                },
                "management_ip": {
                    "type": "string",
                    "description": "The internal management IP address of the agent exposed to the SDDC, which might be different from the internal IP"
                },
                "hostname_verifier_enabled": {
                    "type": "boolean",
                    "description": "Boolean flag to indicate if the agent is using FQDN in the certificate"
                },
                "master": {
                    "type": "boolean",
                    "description": "Boolean flag to indicate if the agent is the master, only the master Agent is accessible"
                },
                "network_netmask": {
                    "type": "string",
                    "description": "Network netmask of the agent"
                },
                "network_gateway": {
                    "type": "string",
                    "description": "Network gateway of the agent"
                },
                "provider": {
                    "type": "string",
                    "description": "The cloud provider"
                },
                "cert_enabled": {
                    "type": "boolean",
                    "description": "Boolean flag to indicate if the agent is using CA signed certificate"
                },
                "agent_state": {
                    "enum": [
                        "NOT_READY",
                        "DEPLOYING",
                        "CUSTOMIZING",
                        "READY",
                        "DELETING",
                        "DELETED",
                        "FAILED"
                    ],
                    "type": "string",
                    "description": "Agent state"
                }
            }
        },
        "AwsCompatibleSubnets": {
            "type": "object",
            "properties": {
                "customer_available_zones": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "vpc_map": {
                    "additionalProperties": {
                        "$ref": "#/definitions/VpcInfoSubnets"
                    },
                    "type": "object"
                }
            }
        },
        "interfacesDashboardStats": {
            "type": "object",
            "properties": {
                "vnic_7_in_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_0_in_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_8_out_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_5_in_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_2_in_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_3_in_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_6_out_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_3_in_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_8_in_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_1_in_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_1_out_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_5_out_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_0_out_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_0_out_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_6_out_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_3_out_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_7_in_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_1_out_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_9_out_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_9_in_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_4_in_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_5_out_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_2_out_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_2_in_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_5_in_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_7_out_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_3_out_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_4_out_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_4_out_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_1_in_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_2_out_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_6_in_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_0_in_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_9_in_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_7_out_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_4_in_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_9_out_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_8_out_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_8_in_byte": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                },
                "vnic_6_in_pkt": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array"
                }
            },
            "description": "Dashboard Statistics data for Interfaces."
        },
        "HostInstanceTypes": {
            "enum": [
                "i3.metal",
                "r5.metal",
                "i3en.metal"
            ],
            "type": "string"
        },
        "AwsCustomerConnectedAccount": {
            "required": [
                "account_number",
                "policy_payer_arn",
                "policy_service_arn",
                "policy_external_id",
                "cf_stack_name",
                "region_to_az_to_shadow_mapping",
                "org_id"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractEntity"
                },
                {
                    "properties": {
                        "policy_payer_arn": {
                            "type": "string"
                        },
                        "region_to_az_to_shadow_mapping": {
                            "additionalProperties": {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object",
                                "description": "A map of internal zones to customer zones."
                            },
                            "type": "object",
                            "description": "Provides a map of regions to availability zones from the shadow account's perspective"
                        },
                        "org_id": {
                            "type": "string"
                        },
                        "cf_stack_name": {
                            "type": "string"
                        },
                        "state": {
                            "enum": [
                                "ACTIVE",
                                "BROKEN",
                                "DELETED"
                            ],
                            "type": "string"
                        },
                        "account_number": {
                            "type": "string"
                        },
                        "policy_service_arn": {
                            "type": "string"
                        },
                        "policy_external_id": {
                            "type": "string"
                        },
                        "policy_payer_linked_arn": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "sddcNetwork": {
            "required": [
                "cgwId",
                "name"
            ],
            "type": "object",
            "properties": {
                "subnets": {
                    "description": "Network address groups for routed logical networks.",
                    "$ref": "#/definitions/sddcNetworkAddressGroups"
                },
                "cgwName": {
                    "type": "string",
                    "description": "Name of the compute gateway to which the logical network is attached."
                },
                "name": {
                    "minLength": 1,
                    "type": "string",
                    "description": "Name of logical network. Length needs to be between 1-35 characters.",
                    "maxLength": 35
                },
                "l2Extension": {
                    "description": "Layer 2 extension for extended logical networks.",
                    "$ref": "#/definitions/l2Extension"
                },
                "cgwId": {
                    "minLength": 1,
                    "type": "string",
                    "description": "ID of the compute gateway edge to which the logical network is attached.",
                    "maxLength": 2147483647
                },
                "dhcpConfigs": {
                    "description": "DHCP configuration for routed logical networks.",
                    "$ref": "#/definitions/sddcNetworkDhcpConfig"
                },
                "id": {
                    "type": "string",
                    "description": "ID of logical network."
                }
            },
            "description": "Logical network."
        },
        "result": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "description": "Job Result value associated with key ID."
                },
                "key": {
                    "type": "string",
                    "description": "Job Result key ID."
                }
            },
            "description": "Job result information for the configuration change carried out on NSX Edge."
        },
        "VsanClusterReconfigBias": {
            "required": [
                "id",
                "short_description",
                "full_description"
            ],
            "type": "object",
            "properties": {
                "short_description": {
                    "type": "string"
                },
                "full_description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            },
            "x-vmc-vsan-api": null,
            "description": "Bias for reconfiguring vSAN in a cluster."
        },
        "Subnets": {
            "type": "object",
            "properties": {
                "subnets": {
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "List of subnets for which IPsec VPN is configured. Subnets should be network address specified in CIDR format and can accept '0.0.0.0/0' (any)"
                }
            }
        },
        "NewCredentials": {
            "required": [
                "name",
                "username",
                "password"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Username of the credentials"
                },
                "password": {
                    "type": "string",
                    "description": "Password associated with the credentials"
                },
                "name": {
                    "minLength": 1,
                    "type": "string",
                    "description": "Name of the credentials",
                    "maxLength": 256
                }
            }
        },
        "AwsKeyPair": {
            "type": "object",
            "properties": {
                "key_name": {
                    "type": "string"
                },
                "key_fingerprint": {
                    "type": "string"
                },
                "key_material": {
                    "type": "string"
                }
            }
        },
        "AwsSddcConnection": {
            "required": [
                "sddc_id",
                "org_id",
                "connected_account_id",
                "vpc_id",
                "subnet_id",
                "subnet_availability_zone",
                "cidr_block_vpc",
                "cidr_block_subnet",
                "default_route_table",
                "customer_eni_infos"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractEntity"
                },
                {
                    "properties": {
                        "cidr_block_subnet": {
                            "type": "string",
                            "description": "The CIDR block of the customer's subnet this link is in."
                        },
                        "connected_account_id": {
                            "type": "string",
                            "description": "The corresponding connected (customer) account UUID this connection is attached to."
                        },
                        "eni_group": {
                            "type": "string",
                            "description": "Which group the ENIs belongs to. (deprecated)"
                        },
                        "subnet_id": {
                            "type": "string",
                            "description": "The ID of the subnet this link is to."
                        },
                        "cgw_present": {
                            "type": "boolean",
                            "description": "Determines whether the CGW is present in this connection set or not. Used for multi-az deployments."
                        },
                        "org_id": {
                            "type": "string",
                            "description": "The org this link belongs to."
                        },
                        "sddc_id": {
                            "type": "string",
                            "description": "The SDDC this link is used for."
                        },
                        "cidr_block_vpc": {
                            "type": "string",
                            "description": "The CIDR block of the customer's VPC."
                        },
                        "connection_order": {
                            "type": "integer",
                            "description": "The order of the connection"
                        },
                        "state": {
                            "enum": [
                                "ACTIVE",
                                "BROKEN",
                                "DELETED"
                            ],
                            "type": "string",
                            "description": "The state of the connection."
                        },
                        "subnet_availability_zone": {
                            "type": "string",
                            "description": "Which availability zone is this connection in?"
                        },
                        "vpc_id": {
                            "type": "string",
                            "description": "The VPC ID of the subnet this link is to."
                        },
                        "customer_eni_infos": {
                            "items": {
                                "$ref": "#/definitions/CustomerEniInfo"
                            },
                            "type": "array",
                            "description": "A list of all ENIs used for this connection."
                        },
                        "default_route_table": {
                            "type": "string",
                            "description": "The default routing table in the customer's VPC."
                        }
                    }
                }
            ]
        },
        "vnic": {
            "required": [
                "index"
            ],
            "type": "object",
            "properties": {
                "subInterfaces": {
                    "description": "List of sub interfaces. Sub interfaces can be created only on a trunk interface.",
                    "$ref": "#/definitions/SubInterfaces"
                },
                "addressGroups": {
                    "description": "Address group configuration of the interface.",
                    "$ref": "#/definitions/edgeVnicAddressGroups"
                },
                "isConnected": {
                    "type": "boolean",
                    "description": "Value is true if the vnic is connected to a logical switch, standard portgroup or distributed portgroup."
                },
                "enableSendRedirects": {
                    "type": "boolean",
                    "description": "Value is true if send redirects is enabled. Enable ICMP redirect to convey routing information to hosts."
                },
                "inShapingPolicy": {
                    "$ref": "#/definitions/TrafficShapingPolicy"
                },
                "label": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Interface label of format vNic_{vnicIndex} provided by NSX Manager. Read only.",
                    "maxLength": 255
                },
                "enableProxyArp": {
                    "type": "boolean",
                    "description": "Value is true if proxy arp is enabled. Enable proxy ARP if you want to allow the NSX Edge of type 'gatewayServices' to answer ARP requests intended for other machines."
                },
                "index": {
                    "minimum": 0,
                    "type": "integer",
                    "description": "Index of the vnic. Min value is 0 and max value is 9.",
                    "maximum": 9,
                    "format": "int32"
                },
                "name": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Name of the interface. Optional.",
                    "maxLength": 255
                },
                "mtu": {
                    "minimum": 68,
                    "type": "integer",
                    "description": "MTU of the interface, with default as 1500. Min is 68, Max is 9000. Optional.",
                    "maximum": 9000,
                    "format": "int32"
                },
                "fenceParameters": {
                    "items": {
                        "$ref": "#/definitions/keyValueAttributes"
                    },
                    "type": "array"
                },
                "macAddresses": {
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/MacAddress"
                    },
                    "type": "array",
                    "description": "Distinct MAC addresses configured for the vnic. Optional."
                },
                "outShapingPolicy": {
                    "$ref": "#/definitions/TrafficShapingPolicy"
                },
                "portgroupName": {
                    "type": "string",
                    "description": "Name of the port group or logical switch."
                },
                "enableBridgeMode": {
                    "type": "boolean",
                    "description": "Value is true if bridge mode is enabled."
                },
                "type": {
                    "type": "string",
                    "description": "Type of the vnic. Values are uplink, internal, trunk. At least one internal interface must be configured for NSX Edge HA to work."
                },
                "portgroupId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Value are port group ID (standard portgroup or distributed portgroup) or virtual wire ID (logical switch). Logical switch cannot be used for a TRUNK vnic. Portgroup cannot be shared among vnics/LIFs. Required when isConnected is specified as true. Example 'network-17' (standard portgroup), 'dvportgroup-34' (distributed portgroup) or 'virtualwire-2' (logical switch).",
                    "maxLength": 255
                }
            },
            "description": "NSX Edge vnic configuration details."
        },
        "CloudProvider": {
            "discriminator": "provider",
            "required": [
                "provider"
            ],
            "type": "object",
            "properties": {
                "provider": {
                    "type": "string",
                    "description": "Name of the Cloud Provider"
                }
            }
        },
        "UpdateCredentials": {
            "required": [
                "username",
                "password"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Username of the credentials"
                },
                "password": {
                    "type": "string",
                    "description": "Password associated with the credentials"
                }
            }
        },
        "dhcpLeaseInfo": {
            "type": "object",
            "properties": {
                "hostLeaseInfoDtos": {
                    "items": {
                        "$ref": "#/definitions/hostLeaseInfo"
                    },
                    "type": "array",
                    "description": "List of DHCP leases."
                }
            },
            "description": "DHCP lease information."
        },
        "IpsecStatusAndStats": {
            "type": "object",
            "properties": {
                "timeStamp": {
                    "type": "integer",
                    "format": "int64"
                },
                "serverStatus": {
                    "type": "string"
                },
                "siteStatistics": {
                    "items": {
                        "$ref": "#/definitions/IpsecSiteStats"
                    },
                    "type": "array"
                }
            }
        },
        "SddcStateRequest": {
            "type": "object",
            "properties": {
                "sddcs": {
                    "items": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": "array"
                },
                "states": {
                    "items": {
                        "enum": [
                            "SCHEDULED",
                            "RUNNING",
                            "CANCELED",
                            "COMPLETED"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "DataPageSddcNetwork": {
            "type": "object",
            "properties": {
                "pagingInfo": {
                    "$ref": "#/definitions/PagingInfo"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/sddcNetwork"
                    },
                    "type": "array"
                }
            }
        },
        "EsxHost": {
            "discriminator": "provider",
            "required": [
                "provider"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "availability_zone": {
                    "type": "string",
                    "description": "Availability zone where the host is provisioned."
                },
                "esx_id": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "instance_type": {
                    "type": "string",
                    "description": "Backing cloud provider instance type for host."
                },
                "mac_address": {
                    "type": "string"
                },
                "custom_properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "esx_state": {
                    "enum": [
                        "DEPLOYING",
                        "INITIALIZING",
                        "PROVISIONED",
                        "READY",
                        "DELETING",
                        "DELETED",
                        "FAILED",
                        "ADDING_TO_VCENTER",
                        "DELETING_FROM_VCENTER",
                        "PENDING_CLOUD_DELETION"
                    ],
                    "type": "string"
                }
            }
        },
        "SddcAllocatePublicIpSpec": {
            "required": [
                "count"
            ],
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "private_ips": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "List of workload VM private IPs to be assigned the public IP just allocated."
                },
                "names": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "List of names for the workload VM public IP assignment."
                }
            }
        },
        "VsanAvailableCapacity": {
            "required": [
                "size",
                "cost",
                "quality"
            ],
            "type": "object",
            "properties": {
                "cost": {
                    "type": "string"
                },
                "quality": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "x-vmc-vsan-api": null,
            "description": "Infomation about an available vSAN capacity in a cluster."
        },
        "dnsStatusAndStats": {
            "type": "object",
            "properties": {
                "timeStamp": {
                    "type": "integer",
                    "format": "int64"
                },
                "requests": {
                    "$ref": "#/definitions/requests"
                },
                "responses": {
                    "$ref": "#/definitions/dnsResponseStats"
                },
                "cachedDBRRSet": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "description": "DNS statistics."
        },
        "sslvpnDashboardStats": {
            "type": "object",
            "properties": {
                "activeClients": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array",
                    "description": "Number of active clients."
                },
                "sslvpnBytesIn": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array",
                    "description": "Rx bytes received for SSL VPN."
                },
                "authFailures": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array",
                    "description": "Number of authentication failures."
                },
                "sessionsCreated": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array",
                    "description": "Number of SSL VPN sessions created."
                },
                "sslvpnBytesOut": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array",
                    "description": "Tx bytes transmitted for SSL VPN."
                }
            },
            "description": "Dashboard Statistics data for SSL VPN."
        },
        "OnDemandOfferInstance": {
            "properties": {
                "product": {
                    "type": "string"
                },
                "product_type": {
                    "type": "string",
                    "description": "Deprecated. Please use product and type fields instead."
                },
                "name": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "unit_price": {
                    "type": "string"
                },
                "monthly_cost": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "version",
                "description",
                "region",
                "currency",
                "unit_price",
                "monthly_cost",
                "product",
                "type"
            ],
            "type": "object",
            "example": {
                "product": "HOST",
                "product_type": null,
                "name": "VMware Cloud on AWS",
                "currency": "USD",
                "region": "US_WEST_2",
                "unit_price": "8.3681",
                "monthly_cost": "6108.7130",
                "version": "1.0",
                "type": "i3.metal",
                "description": "VMware Cloud on AWS On-Demand"
            },
            "description": "Holder for the on-demand offer instance."
        },
        "SubnetRouteTableInfo": {
            "type": "object",
            "properties": {
                "subnet_id": {
                    "type": "string",
                    "description": "subnet id"
                },
                "association_id": {
                    "type": "string",
                    "description": "subnet - route table association id"
                },
                "routetable_id": {
                    "type": "string",
                    "description": "route table id"
                }
            }
        },
        "DashboardStat": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "integer",
                    "format": "int64"
                },
                "value": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "AwsSddcConfig": {
            "type": "object",
            "x-vmw-vapi-discriminated-by": "AWS",
            "allOf": [
                {
                    "$ref": "#/definitions/SddcConfig"
                },
                {
                    "required": [
                        "region"
                    ],
                    "properties": {
                        "region": {
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "ConnectivityValidationSubGroup": {
            "type": "object",
            "properties": {
                "inputs": {
                    "items": {
                        "$ref": "#/definitions/ConnectivityValidationInput"
                    },
                    "type": "array",
                    "description": "List of user inputs for the sub group."
                },
                "tests": {
                    "items": {
                        "$ref": "#/definitions/ConnectivityAgentValidation"
                    },
                    "type": "array",
                    "description": "List of connectivity tests."
                },
                "label": {
                    "type": "string",
                    "description": "Name of the sub-group."
                },
                "help": {
                    "type": "string",
                    "description": "Help text."
                },
                "id": {
                    "enum": [
                        "PRIMARY_DNS",
                        "SECONDARY_DNS",
                        "ONPREM_VCENTER",
                        "ONPREM_PSC",
                        "ACTIVE_DIRECTORY",
                        "ONPREM_ESX",
                        "DRAAS_ONPREM_VCENTER",
                        "DRAAS_ONPREM_PSC",
                        "DRAAS_ONPREM_SRM",
                        "DRAAS_ONPREM_VR"
                    ],
                    "type": "string",
                    "description": "subGroup id, i.e. PRIMARY_DNS, SECONDARY_DNS, ONPREM_VCENTER, ONPREM_PSC, ACTIVE_DIRECTORY, ONPREM_ESX, DRAAS_ONPREM_VCENTER, DRAAS_ONPREM_PSC, DRAAS_ONPREM_SRM and DRAAS_ONPREM_VR."
                }
            }
        },
        "SddcManifest": {
            "type": "object",
            "description": "Describes software components of the installed SDDC",
            "properties": {
                "vmc_version": {
                    "type": "string",
                    "description": "the vmcVersion of the sddc for display"
                },
                "glcm_bundle": {
                    "$ref": "#/definitions/GlcmBundle"
                },
                "pop_info": {
                    "type": "object",
                    "$ref": "#/definitions/PopInfo"
                },
                "vmc_internal_version": {
                    "type": "string",
                    "description": "the vmcInternalVersion of the sddc for internal use"
                },
                "ebs_backed_vsan_config": {
                    "$ref": "#/definitions/EbsBackedVsanConfig"
                },
                "vsan_witness_ami": {
                    "$ref": "#/definitions/AmiInfo"
                },
                "esx_ami": {
                    "$ref": "#/definitions/AmiInfo"
                },
                "esx_nsxt_ami": {
                    "$ref": "#/definitions/AmiInfo"
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                }
            }
        },
        "PopServiceInfo": {
            "type": "object",
            "properties": {
                "cln": {
                    "type": "string",
                    "description": "The service change set number."
                },
                "version": {
                    "type": "string",
                    "description": "The service API version."
                },
                "build": {
                    "type": "string",
                    "description": "The service build number."
                },
                "service": {
                    "enum": [
                        "OS",
                        "AGENT",
                        "GLCM",
                        "S3_ADAPTER",
                        "JRE",
                        "DOCKER",
                        "AIDE",
                        "RTS",
                        "FM_LOG_COLLECTOR",
                        "FM_METRICS_COLLECTOR",
                        "BRE",
                        "BRF",
                        "REVERSE_PROXY",
                        "FORWARD_PROXY",
                        "DNS",
                        "NTP",
                        "LOGZ_LOG_COLLECTOR"
                    ],
                    "type": "string",
                    "description": "An enum of PoP related services (including os platform and JRE)."
                }
            }
        },
        "ExtendedAttribute": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "edgeStatus": {
            "type": "object",
            "properties": {
                "preRulesExists": {
                    "type": "boolean",
                    "description": "Value is true if pre rules publish is enabled."
                },
                "featureStatuses": {
                    "items": {
                        "$ref": "#/definitions/featureStatus"
                    },
                    "type": "array",
                    "description": "Individual feature status."
                },
                "timestamp": {
                    "type": "integer",
                    "description": "Timestamp value at which the NSX Edge healthcheck was done.",
                    "format": "int64"
                },
                "publishStatus": {
                    "type": "string",
                    "description": "Status of the latest configuration change for the NSX Edge. Values are APPLIED or PERSISTED (not published to NSX Edge Appliance yet)."
                },
                "lastPublishedPreRulesGenerationNumber": {
                    "type": "integer",
                    "description": "Value of the last published pre rules generation number.",
                    "format": "int64"
                },
                "version": {
                    "type": "integer",
                    "description": "Version number of the current configuration.",
                    "format": "int64"
                },
                "edgeVmStatus": {
                    "items": {
                        "$ref": "#/definitions/edgeVmStatus"
                    },
                    "type": "array",
                    "description": "Detailed status of each of the deployed NSX Edge appliances."
                },
                "activeVseHaIndex": {
                    "type": "integer",
                    "description": "Index of the active NSX Edge appliance. Values are 0 and 1.",
                    "format": "int32"
                },
                "systemStatus": {
                    "type": "string",
                    "description": "System status of the active NSX Edge appliance."
                },
                "haVnicInUse": {
                    "type": "integer",
                    "description": "Index of the vnic consumed for NSX Edge HA.",
                    "format": "int32"
                },
                "edgeStatus": {
                    "type": "string",
                    "description": "NSX Edge appliance health status identified by GREY (unknown status), GREEN (health checks are successful), YELLOW (intermittent health check failure), RED (none of the appliances are in serving state). If health check fails for 5 consecutive times for all appliance (2 for HA else 1) then status will turn from YELLOW to RED."
                }
            },
            "description": "NSX Edge Appliance status."
        },
        "firewallGlobalConfig": {
            "type": "object",
            "properties": {
                "tcpAllowOutOfWindowPackets": {
                    "type": "boolean",
                    "description": "Allow TCP out of window packets."
                },
                "udpTimeout": {
                    "minimum": 1,
                    "type": "integer",
                    "description": "UDP timeout close.",
                    "format": "int32"
                },
                "ipGenericTimeout": {
                    "minimum": 1,
                    "type": "integer",
                    "description": "IP generic timeout.",
                    "format": "int32"
                },
                "tcpPickOngoingConnections": {
                    "type": "boolean",
                    "description": "Pick TCP ongoing connections."
                },
                "tcpTimeoutOpen": {
                    "minimum": 1,
                    "type": "integer",
                    "description": "TCP timeout open.",
                    "format": "int32"
                },
                "tcpTimeoutClose": {
                    "minimum": 1,
                    "type": "integer",
                    "description": "TCP timeout close.",
                    "format": "int32"
                },
                "icmp6Timeout": {
                    "minimum": 1,
                    "type": "integer",
                    "description": "ICMP6 timeout.",
                    "format": "int32"
                },
                "dropIcmpReplays": {
                    "type": "boolean",
                    "description": "Drop icmp replays."
                },
                "logIcmpErrors": {
                    "type": "boolean",
                    "description": "Log icmp errors."
                },
                "tcpSendResetForClosedVsePorts": {
                    "type": "boolean",
                    "description": "Send TCP reset for closed NSX Edge ports."
                },
                "dropInvalidTraffic": {
                    "type": "boolean",
                    "description": "Drop invalid traffic."
                },
                "enableSynFloodProtection": {
                    "type": "boolean",
                    "description": "Protect against SYN flood attacks by detecting bogus TCP connections and terminating them without consuming firewall state tracking resources. Default : false"
                },
                "icmpTimeout": {
                    "minimum": 1,
                    "type": "integer",
                    "description": "ICMP timeout.",
                    "format": "int32"
                },
                "tcpTimeoutEstablished": {
                    "minimum": 1,
                    "type": "integer",
                    "description": "TCP timeout established.",
                    "format": "int32"
                },
                "logInvalidTraffic": {
                    "type": "boolean",
                    "description": "Log invalid traffic."
                }
            },
            "description": "Global configuration applicable to all rules."
        },
        "ClusterConfig": {
            "required": [
                "num_hosts"
            ],
            "type": "object",
            "properties": {
                "host_cpu_cores_count": {
                    "type": "integer",
                    "description": "Customize CPU cores on hosts in a cluster. Specify number of cores to be enabled on hosts in a cluster.",
                    "format": "int32"
                },
                "host_instance_type": {
                    "type": "string",
                    "description": "The instance type for the esx hosts added to this cluster.",
                    "$ref": "#/definitions/HostInstanceTypes"
                },
                "storage_capacity": {
                    "type": "integer",
                    "description": "For EBS-backed instances only, the requested storage capacity in GiB.",
                    "format": "int64"
                },
                "num_hosts": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CustomerEniInfo": {
            "type": "object",
            "description": "Indicates a single cross-account ENI and its characteristics.",
            "properties": {
                "secondary_ip_addresses": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Indicates list of secondary IP created for this ENI."
                },
                "eni_id": {
                    "type": "string",
                    "description": "Interface ID on customer account."
                },
                "primary_ip_address": {
                    "type": "string",
                    "description": "Indicates primary address of the ENI."
                }
            }
        },
        "NetworkTemplate": {
            "type": "object",
            "properties": {
                "management_gateway_templates": {
                    "items": {
                        "$ref": "#/definitions/ManagementGatewayTemplate"
                    },
                    "type": "array"
                },
                "compute_gateway_templates": {
                    "items": {
                        "$ref": "#/definitions/ComputeGatewayTemplate"
                    },
                    "type": "array"
                }
            }
        },
        "LogicalNetwork": {
            "type": "object",
            "properties": {
                "subnet_cidr": {
                    "type": "string",
                    "description": "the subnet cidr"
                },
                "name": {
                    "type": "string",
                    "description": "name of the network"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "gateway ip of the logical network"
                },
                "dhcp_enabled": {
                    "type": "string",
                    "description": "if 'true' - enabled; if 'false' - disabled"
                },
                "dhcp_ip_range": {
                    "type": "string",
                    "description": "ip range within the subnet mask, range delimiter is '-' (example 10.118.10.130-10.118.10.140)"
                },
                "tunnel_id": {
                    "type": "integer",
                    "description": "tunnel id of extended network",
                    "format": "int32"
                },
                "id": {
                    "readOnly": true,
                    "type": "string"
                },
                "network_type": {
                    "readOnly": true,
                    "enum": [
                        "HOSTED",
                        "ROUTED",
                        "EXTENDED"
                    ],
                    "type": "string"
                }
            }
        },
        "MapZonesRequest": {
            "type": "object",
            "properties": {
                "connected_account_id": {
                    "type": "string",
                    "description": "The connected account ID to remap. This is a standard UUID."
                },
                "org_id": {
                    "type": "string",
                    "description": "The org ID to remap in. This is a standard UUID."
                },
                "petronas_regions_to_map": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "A list of Petronas regions to map."
                }
            }
        },
        "OfferInstancesHolder": {
            "properties": {
                "on_demand": {
                    "$ref": "#/definitions/OnDemandOfferInstance"
                },
                "offers": {
                    "items": {
                        "$ref": "#/definitions/TermOfferInstance"
                    },
                    "type": "array"
                }
            },
            "required": [
                "on_demand",
                "offers"
            ],
            "type": "object",
            "example": {
                "on_demand": {
                    "product": "HOST",
                    "product_type": null,
                    "name": "VMware Cloud on AWS",
                    "currency": "USD",
                    "region": "US_WEST_2",
                    "unit_price": "8.3681",
                    "monthly_cost": "6108.7130",
                    "version": "1.0",
                    "type": "i3.metal",
                    "description": "VMware Cloud on AWS On-Demand"
                },
                "offers": [
                    {
                        "description": "VMware Cloud on Amazon Web Services",
                        "product": "HOST",
                        "product_type": null,
                        "name": "VMware Cloud on AWS",
                        "region": "US_WEST_2",
                        "commitment_term": 12,
                        "unit_price": "51987.0",
                        "currency": "USD",
                        "version": "1.0",
                        "offer_context_id": null,
                        "product_charge_id": null,
                        "type": "i3.metal",
                        "product_id": "VMC-AWS"
                    },
                    {
                        "description": "VMware Cloud on Amazon Web Services",
                        "product": "HOST",
                        "product_type": null,
                        "name": "VMware Cloud on AWS",
                        "region": "US_WEST_2",
                        "commitment_term": 36,
                        "unit_price": "109366.0",
                        "currency": "USD",
                        "version": "1.0",
                        "offer_context_id": null,
                        "product_charge_id": null,
                        "type": "i3.metal",
                        "product_id": "VMC-AWS"
                    }
                ]
            },
            "description": "Holder for the offer instances."
        },
        "VpnTunnelTrafficStats": {
            "type": "object",
            "properties": {
                "packets_out": {
                    "type": "string"
                },
                "packet_received_errors": {
                    "type": "string"
                },
                "rx_bytes_on_local_subnet": {
                    "type": "string"
                },
                "replay_errors": {
                    "type": "string"
                },
                "sequence_number_over_flow_errors": {
                    "type": "string"
                },
                "encryption_failures": {
                    "type": "string"
                },
                "integrity_errors": {
                    "type": "string"
                },
                "packet_sent_errors": {
                    "type": "string"
                },
                "decryption_failures": {
                    "type": "string"
                },
                "packets_in": {
                    "type": "string"
                },
                "tx_bytes_from_local_subnet": {
                    "type": "string"
                }
            }
        },
        "ReservationInMw": {
            "type": "object",
            "properties": {
                "rid": {
                    "type": "string",
                    "description": "Reservation ID",
                    "format": "uuid"
                },
                "week_of": {
                    "type": "string",
                    "description": "SUNDAY of the week that maintenance is scheduled, ISO format date"
                },
                "create_time": {
                    "type": "string",
                    "description": "Optional",
                    "format": "date-time"
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "Optional"
                }
            }
        },
        "requests": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer",
                    "format": "int64"
                },
                "queries": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "description": "DNS request statistics."
        },
        "firewallRuleStats": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "integer",
                    "description": "Timestamp of statistics collection.",
                    "format": "int64"
                },
                "connectionCount": {
                    "type": "integer",
                    "description": "Connection count.",
                    "format": "int64"
                },
                "byteCount": {
                    "type": "integer",
                    "description": "Byte count.",
                    "format": "int64"
                },
                "packetCount": {
                    "type": "integer",
                    "description": "Packet count.",
                    "format": "int64"
                }
            },
            "description": "Statistics for firewall rule"
        },
        "ipsecSite": {
            "type": "object",
            "properties": {
                "psk": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Pre Shared Key for the IPsec Site. Required if Site peerIp is not 'any'. Global PSK is used when Authentication mode is PSK and Site peerIp is 'any'.",
                    "maxLength": 128
                },
                "localId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Local ID of the IPsec Site. Defaults to the local IP.",
                    "maxLength": 255
                },
                "enablePfs": {
                    "type": "boolean",
                    "description": "Enable/disable Perfect Forward Secrecy. Default is true."
                },
                "authenticationMode": {
                    "type": "string",
                    "description": "Authentication mode for the IPsec Site. Valid values are psk and x.509, with psk as default."
                },
                "peerSubnets": {
                    "description": "Peer subnets for which IPsec VPN is configured.",
                    "$ref": "#/definitions/Subnets"
                },
                "dhGroup": {
                    "type": "string",
                    "description": "Diffie-Hellman algorithm group. Defaults to DH14 for FIPS enabled NSX Edge. DH2 and DH5 are not supported when FIPS is enabled on NSX Edge. Valid values are DH2, DH5, DH14, DH15, DH16."
                },
                "siteId": {
                    "type": "string",
                    "description": "ID of the IPsec Site configuration provided by NSX Manager."
                },
                "description": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Description of the IPsec Site.",
                    "maxLength": 8192
                },
                "peerIp": {
                    "minLength": 0,
                    "type": "string",
                    "description": "IP (IPv4) address or FQDN of the Peer. Can also be specified as 'any'. Required.",
                    "maxLength": 255
                },
                "name": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Name of the IPsec Site.",
                    "maxLength": 255
                },
                "certificate": {
                    "minLength": 0,
                    "type": "string",
                    "maxLength": 255
                },
                "localIp": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Local IP of the IPsec Site. Should be one of the IP addresses configured on the uplink interfaces of the NSX Edge. Required.",
                    "maxLength": 255
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "IPsec encryption algorithm with default as aes256. Valid values are 'aes', 'aes256', '3des', 'aes-gcm'."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable IPsec Site."
                },
                "mtu": {
                    "type": "integer",
                    "description": "MTU for the IPsec site. Defaults to the mtu of the NSX Edge vnic specified by the localIp. Optional.",
                    "format": "int32"
                },
                "extension": {
                    "minLength": 0,
                    "type": "string",
                    "maxLength": 1024
                },
                "peerId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Peer ID. Should be unique for all IPsec Site's configured for an NSX Edge.",
                    "maxLength": 255
                },
                "localSubnets": {
                    "description": "Local subnets for which IPsec VPN is configured.",
                    "$ref": "#/definitions/Subnets"
                }
            },
            "description": "NSX Edge IPsec Site configuration details."
        },
        "ReservationWindow": {
            "type": "object",
            "properties": {
                "reservation_state": {
                    "enum": [
                        "SCHEDULED",
                        "RUNNING",
                        "CANCELED",
                        "COMPLETED"
                    ],
                    "type": "string"
                },
                "emergency": {
                    "type": "boolean"
                },
                "maintenance_properties": {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "string",
                            "description": "Status of upgrade, if any"
                        }
                    }
                },
                "reserve_id": {
                    "type": "string"
                },
                "start_hour": {
                    "type": "integer",
                    "format": "int32"
                },
                "sddc_id": {
                    "type": "string"
                },
                "manifest_id": {
                    "type": "string"
                },
                "duration_hours": {
                    "type": "integer",
                    "format": "int64"
                },
                "start_date": {
                    "type": "string"
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "Metadata for reservation window, in key-value form"
                }
            }
        },
        "FirewallRule": {
            "type": "object",
            "properties": {
                "rule_type": {
                    "readOnly": true,
                    "enum": [
                        "USER",
                        "DEFAULT"
                    ],
                    "type": "string"
                },
                "application_ids": {
                    "items": {
                        "type": "string",
                        "description": "Id of Service available to the gateway."
                    },
                    "type": "array"
                },
                "name": {
                    "type": "string"
                },
                "rule_interface": {
                    "type": "string",
                    "description": "Deprecated, left for backwards compatibility. Remove once UI stops using it."
                },
                "destination": {
                    "type": "string",
                    "description": "Optional. Possible formats are IP, IP1-IPn, CIDR or comma separated list of those entries. If not specified, defaults to 'any'."
                },
                "id": {
                    "readOnly": true,
                    "type": "string"
                },
                "destination_scope": {
                    "$ref": "#/definitions/FirewallRuleScope"
                },
                "source": {
                    "type": "string",
                    "description": "Optional. Possible formats are IP, IP1-IPn, CIDR or comma separated list of those entries. If not specified, defaults to 'any'."
                },
                "source_scope": {
                    "$ref": "#/definitions/FirewallRuleScope"
                },
                "services": {
                    "items": {
                        "$ref": "#/definitions/FirewallService"
                    },
                    "type": "array",
                    "description": "list of protocols and ports for this firewall rule"
                },
                "action": {
                    "enum": [
                        "ALLOW",
                        "DENY"
                    ],
                    "type": "string"
                },
                "revision": {
                    "readOnly": true,
                    "type": "integer",
                    "description": "current revision of the list of firewall rules, used to protect against concurrent modification (first writer wins)",
                    "format": "int32"
                }
            }
        },
        "SubscriptionDetails": {
            "type": "object",
            "description": "details of a subscription",
            "properties": {
                "status": {
                    "enum": [
                        "CREATED",
                        "ACTIVATED",
                        "FAILED",
                        "CANCELLED",
                        "EXPIRED",
                        "PENDING_PROVISIONING",
                        "ORDER_SUBMITTED"
                    ],
                    "type": "string"
                },
                "anniversary_billing_date": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "billing_frequency": {
                    "type": "string",
                    "description": "The frequency at which the customer is billed. Currently supported values are \"Upfront\" and \"Monthly\""
                },
                "auto_renewed_allowed": {
                    "type": "string"
                },
                "commitment_term": {
                    "type": "string"
                },
                "csp_subscription_id": {
                    "type": "string"
                },
                "billing_subscription_id": {
                    "type": "string"
                },
                "offer_version": {
                    "type": "string"
                },
                "offer_type": {
                    "$ref": "#/definitions/OfferType"
                },
                "description": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "offer_name": {
                    "type": "string"
                },
                "commitment_term_uom": {
                    "type": "string",
                    "description": "unit of measurment for commitment term"
                },
                "start_date": {
                    "type": "string"
                },
                "quantity": {
                    "type": "string"
                }
            }
        },
        "appliancesSummary": {
            "type": "object",
            "properties": {
                "dataStoreMoidOfActiveVse": {
                    "type": "string",
                    "description": "vCenter MOID of the active NSX Edge appliance's data store."
                },
                "enableFips": {
                    "type": "boolean",
                    "description": "Value is true if FIPS is enabled on NSX Edge appliance."
                },
                "hostNameOfActiveVse": {
                    "type": "string",
                    "description": "Host name of the active NSX Edge appliance."
                },
                "vmBuildInfo": {
                    "type": "string",
                    "description": "NSX Edge appliance build version."
                },
                "deployAppliances": {
                    "type": "boolean",
                    "description": "Value is true if NSX Edge appliances are to be deployed."
                },
                "communicationChannel": {
                    "type": "string",
                    "description": "Communication channel used to communicate with NSX Edge appliance."
                },
                "vmNameOfActiveVse": {
                    "type": "string",
                    "description": "Name of the active NSX Edge appliance."
                },
                "numberOfDeployedVms": {
                    "type": "integer",
                    "description": "Number of deployed appliances of the NSX Edge.",
                    "format": "int32"
                },
                "resourcePoolMoidOfActiveVse": {
                    "type": "string",
                    "description": "vCenter MOID of the active NSX Edge appliance's resource pool/cluster. Can be resource pool ID, e.g. resgroup-15 or cluster ID, e.g. domain-c41."
                },
                "dataStoreNameOfActiveVse": {
                    "type": "string",
                    "description": "Datastore name of the active NSX Edge appliance."
                },
                "vmMoidOfActiveVse": {
                    "type": "string",
                    "description": "vCenter MOID of the active NSX Edge appliance."
                },
                "statusFromVseUpdatedOn": {
                    "type": "integer",
                    "description": "Time stamp value when healthcheck status was last updated for the NSX Edge appliance.",
                    "format": "int64"
                },
                "fqdn": {
                    "type": "string",
                    "description": "FQDN of the NSX Edge."
                },
                "applianceSize": {
                    "type": "string",
                    "description": "NSX Edge appliance size."
                },
                "resourcePoolNameOfActiveVse": {
                    "type": "string",
                    "description": "Resource Pool/Cluster name of the active NSX Edge appliance."
                },
                "activeVseHaIndex": {
                    "type": "integer",
                    "description": "HA index of the active NSX Edge appliance.",
                    "format": "int32"
                },
                "vmVersion": {
                    "type": "string",
                    "description": "NSX Edge appliance version."
                },
                "hostMoidOfActiveVse": {
                    "type": "string",
                    "description": "vCenter MOID of the active NSX Edge appliance's host."
                }
            },
            "description": "NSX Edge appliance summary."
        },
        "vnics": {
            "type": "object",
            "properties": {
                "vnics": {
                    "items": {
                        "$ref": "#/definitions/vnic"
                    },
                    "type": "array",
                    "description": "Ordered list of NSX Edge vnics."
                }
            },
            "description": "Ordered list of NSX Edge vnics. Until one connected vnic is configured, none of the configured features will serve the network."
        },
        "SubnetInfo": {
            "type": "object",
            "allOf": [
                {
                    "properties": {
                        "compatible": {
                            "type": "boolean",
                            "description": "Is this customer subnet compatible with the SDDC?"
                        },
                        "connected_account_id": {
                            "type": "string",
                            "description": "The ID of the connected account this subnet is from."
                        },
                        "region_name": {
                            "type": "string",
                            "description": "The region this subnet is from."
                        },
                        "availability_zone": {
                            "type": "string",
                            "description": "The availability zone (customer-centric) this subnet is in."
                        },
                        "subnet_id": {
                            "type": "string",
                            "description": "The ID of the subnet."
                        },
                        "subnet_cidr_block": {
                            "type": "string",
                            "description": "The CIDR block of the subnet."
                        },
                        "note": {
                            "type": "string",
                            "description": "Why a subnet is marked as not compatible. May be blank if compatible."
                        },
                        "vpc_id": {
                            "type": "string",
                            "description": "The ID of the VPC this subnet resides in."
                        },
                        "vpc_cidr_block": {
                            "type": "string",
                            "description": "The CIDR block of the VPC containing this subnet."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the subnet. This is either the tagged name or the default AWS id it was given."
                        }
                    }
                }
            ]
        },
        "ServiceError": {
            "type": "object",
            "description": "Detailed service errors associated with a task.",
            "properties": {
                "default_message": {
                    "type": "string",
                    "description": "Error message in English."
                },
                "original_service": {
                    "type": "string",
                    "description": "The original service name of the error."
                },
                "localized_message": {
                    "type": "string",
                    "description": "The localized message."
                },
                "original_service_error_code": {
                    "type": "string",
                    "description": "The original error code of the service."
                }
            }
        },
        "SddcTemplate": {
            "required": [
                "created",
                "name",
                "state"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractEntity"
                },
                {
                    "properties": {
                        "account_link_sddc_configs": {
                            "items": {
                                "$ref": "#/definitions/AccountLinkSddcConfig"
                            },
                            "type": "array",
                            "description": "A list of the SDDC linking configurations to use."
                        },
                        "state": {
                            "enum": [
                                "INITIALIZATION",
                                "AVAILABLE",
                                "INUSE",
                                "APPLIED",
                                "DELETING",
                                "DELETED",
                                "FAILED"
                            ],
                            "type": "string"
                        },
                        "network_template": {
                            "$ref": "#/definitions/NetworkTemplate"
                        },
                        "name": {
                            "type": "string",
                            "description": "name for SDDC configuration template"
                        },
                        "source_sddc_id": {
                            "type": "string"
                        },
                        "org_id": {
                            "type": "string"
                        },
                        "sddc": {
                            "$ref": "#/definitions/Sddc"
                        }
                    }
                }
            ]
        },
        "LogicalRouterScopes": {
            "type": "object",
            "properties": {
                "logicalRouterScope": {
                    "items": {
                        "$ref": "#/definitions/LogicalRouterScope"
                    },
                    "type": "array"
                }
            }
        },
        "VsanEncryptionConfig": {
            "type": "object",
            "properties": {
                "port": {
                    "type": "integer",
                    "description": "Port to connect to AWS Key Management Service"
                },
                "certificate": {
                    "type": "string",
                    "description": "Public certificate used to connect to AWS Key Management Service"
                }
            }
        },
        "ManagementGatewayTemplate": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/GatewayTemplate"
                },
                {
                    "properties": {
                        "subnet_cidr": {
                            "type": "string",
                            "description": "mgw network subnet cidr"
                        }
                    }
                }
            ]
        },
        "EntityCapacity": {
            "type": "object",
            "description": "Decribes the capacity of a given entity.",
            "properties": {
                "storage_capacity_gib": {
                    "decription": "The storage capacity for the given entity in GiB.",
                    "type": "integer"
                },
                "memory_capacity_gib": {
                    "decription": "The memory capacity for the given entity in GiB.",
                    "type": "integer"
                },
                "total_number_of_cores": {
                    "decription": "The number of CPU cores for the given entity.",
                    "type": "integer"
                },
                "number_of_ssds": {
                    "decription": "The number of SSDs for the given entity.",
                    "type": "integer"
                },
                "cpu_capacity_ghz": {
                    "decription": "The CPU capacity for the given entity in Ghz.",
                    "type": "number"
                },
                "number_of_sockets": {
                    "decription": "The number of sockets for the given entity.",
                    "type": "integer"
                }
            }
        },
        "AwsSddcResourceConfig": {
            "type": "object",
            "x-vmw-vapi-discriminated-by": "AWS",
            "allOf": [
                {
                    "$ref": "#/definitions/SddcResourceConfig"
                },
                {
                    "properties": {
                        "backup_restore_bucket": {
                            "type": "string"
                        },
                        "public_ip_pool": {
                            "items": {
                                "$ref": "#/definitions/SddcPublicIp"
                            },
                            "type": "array"
                        },
                        "vpc_info": {
                            "$ref": "#/definitions/VpcInfo"
                        },
                        "kms_vpc_endpoint": {
                            "$ref": "#/definitions/KmsVpcEndpoint"
                        },
                        "max_num_public_ip": {
                            "type": "integer",
                            "description": "maximum number of public IP that user can allocate."
                        },
                        "account_link_sddc_config": {
                            "items": {
                                "$ref": "#/definitions/SddcLinkConfig"
                            },
                            "type": "array"
                        },
                        "vsan_encryption_config": {
                            "$ref": "#/definitions/VsanEncryptionConfig"
                        },
                        "vpc_info_peered_agent": {
                            "$ref": "#/definitions/VpcInfo"
                        }
                    }
                }
            ]
        },
        "loadBalancerDashboardStats": {
            "type": "object",
            "properties": {
                "lbBpsIn": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array",
                    "description": "Number of bytes in."
                },
                "lbHttpReqs": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array",
                    "description": "Number of HTTP requests received by Load Balancer."
                },
                "lbBpsOut": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array",
                    "description": "Number of bytes out."
                },
                "lbSessions": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array",
                    "description": "Number of Load Balancer sessions."
                }
            },
            "description": "Dashboard Statistics data for Load Balancer."
        },
        "l2vpnStatusAndStats": {
            "type": "object",
            "properties": {
                "timeStamp": {
                    "type": "integer",
                    "description": "Time stamp of statistics collection.",
                    "format": "int64"
                },
                "serverStatus": {
                    "type": "string"
                },
                "siteStats": {
                    "items": {
                        "$ref": "#/definitions/l2vpnStats"
                    },
                    "type": "array",
                    "description": "List of statistics for each Site."
                }
            },
            "description": "L2 VPN status and statistics."
        },
        "l2Extension": {
            "required": [
                "tunnelId"
            ],
            "type": "object",
            "properties": {
                "tunnelId": {
                    "minimum": 1,
                    "type": "integer",
                    "description": "Identifier for layer 2 extension tunnel. Valid range: 1-4093.",
                    "maximum": 4093,
                    "format": "int32"
                }
            },
            "description": "Layer 2 extension."
        },
        "sddcNetworkDhcpIpPool": {
            "type": "object",
            "properties": {
                "ipRange": {
                    "type": "string",
                    "description": "IP range for DHCP IP pool."
                },
                "domainName": {
                    "type": "string",
                    "description": "DNS domain name."
                }
            },
            "description": "DHCP IP pool for logical network."
        },
        "featureCapability": {
            "type": "object",
            "properties": {
                "configurationLimits": {
                    "items": {
                        "$ref": "#/definitions/keyValueAttributes"
                    },
                    "type": "array",
                    "description": "List of key value pairs describing the feature configuration limits."
                },
                "isSupported": {
                    "type": "boolean",
                    "description": "Value is true if feature is supported on NSX Edge."
                },
                "service": {
                    "type": "string",
                    "description": "Name of the feature or service."
                },
                "permission": {
                    "description": "Licence and access control information for the feature.",
                    "$ref": "#/definitions/licenceAclPermissions"
                }
            },
            "description": "Feature capability information."
        },
        "ClusterReconfigureParams": {
            "required": [
                "num_hosts"
            ],
            "type": "object",
            "properties": {
                "storage_capacity": {
                    "type": "integer",
                    "description": "The final desired storage capacity after reconfiguring the cluster in GiB.",
                    "format": "int64"
                },
                "bias": {
                    "type": "string",
                    "description": "Bias value as obtained from the storage constraints call."
                },
                "num_hosts": {
                    "type": "integer",
                    "description": "Number of hosts in the cluster after reconfiguring.",
                    "format": "int32"
                }
            }
        },
        "InstanceTypeConfig": {
            "type": "object",
            "description": "Represents a structure for instance type config",
            "properties": {
                "instance_type": {
                    "type": "string",
                    "description": "Instance type name."
                },
                "hosts": {
                    "items": {
                        "type": "integer"
                    },
                    "type": "array",
                    "description": "Array of number of hosts allowed for this operation. Range of hosts user can select for sddc provision"
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name of instance_type."
                },
                "entity_capacity": {
                    "type": "object",
                    "description": "The capacity of the given instance type.",
                    "$ref": "#/definitions/EntityCapacity"
                }
            }
        },
        "Reservation": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer",
                    "description": "Duration - required for reservation in maintenance window",
                    "format": "int64"
                },
                "rid": {
                    "type": "string",
                    "description": "Reservation ID",
                    "format": "uuid"
                },
                "create_time": {
                    "type": "string",
                    "description": "Optional"
                },
                "start_time": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2018-05-01'T'05:00:00'Z'",
                    "description": "Start time of a reservation"
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "Optional"
                }
            }
        },
        "PagingInfo": {
            "type": "object",
            "properties": {
                "sortOrderAscending": {
                    "type": "boolean"
                },
                "totalCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "startIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "sortBy": {
                    "type": "string"
                },
                "pageSize": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "secondaryAddresses": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "ipAddress": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "List of IP addresses."
                }
            },
            "description": "Secondary IP addresses of the NSX Edge vnic address group. These are used for NAT, LB, VPN etc. Optional."
        },
        "TaskProgressPhase": {
            "required": [
                "id",
                "name",
                "progress_percent"
            ],
            "type": "object",
            "description": "A task progress can be (but does NOT have to be) divided to more meaningful progress phases.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The identifier of the task progress phase"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the task progress phase"
                },
                "progress_percent": {
                    "type": "integer",
                    "description": "The percentage of the phase that has completed",
                    "format": "int32"
                }
            }
        },
        "SubscriptionProducts": {
            "type": "object",
            "description": "Details of products that are available for purchase.",
            "properties": {
                "product": {
                    "type": "string",
                    "description": "The name of the product"
                },
                "types": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "A list of different types/version for the product."
                }
            }
        },
        "cbmStatsData": {
            "type": "object",
            "properties": {
                "vnic_9": {
                    "items": {
                        "$ref": "#/definitions/cbmStatistic"
                    },
                    "type": "array"
                },
                "vnic_8": {
                    "items": {
                        "$ref": "#/definitions/cbmStatistic"
                    },
                    "type": "array"
                },
                "vnic_7": {
                    "items": {
                        "$ref": "#/definitions/cbmStatistic"
                    },
                    "type": "array"
                },
                "vnic_6": {
                    "items": {
                        "$ref": "#/definitions/cbmStatistic"
                    },
                    "type": "array"
                },
                "vnic_5": {
                    "items": {
                        "$ref": "#/definitions/cbmStatistic"
                    },
                    "type": "array"
                },
                "vnic_4": {
                    "items": {
                        "$ref": "#/definitions/cbmStatistic"
                    },
                    "type": "array"
                },
                "vnic_3": {
                    "items": {
                        "$ref": "#/definitions/cbmStatistic"
                    },
                    "type": "array"
                },
                "vnic_2": {
                    "items": {
                        "$ref": "#/definitions/cbmStatistic"
                    },
                    "type": "array"
                },
                "vnic_1": {
                    "items": {
                        "$ref": "#/definitions/cbmStatistic"
                    },
                    "type": "array"
                },
                "vnic_0": {
                    "items": {
                        "$ref": "#/definitions/cbmStatistic"
                    },
                    "type": "array"
                }
            },
            "description": "Statistics data."
        },
        "nsxl2vpn": {
            "required": [
                "listenerIps",
                "sites"
            ],
            "type": "object",
            "properties": {
                "listenerIps": {
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Listener IP addresses.",
                    "maxItems": 1
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled state of L2 VPN service."
                },
                "sites": {
                    "description": "List of L2 VPN sites.",
                    "$ref": "#/definitions/sites"
                }
            },
            "description": "L2 VPN server configuration."
        },
        "TermOfferInstance": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "product": {
                    "type": "string"
                },
                "product_type": {
                    "type": "string",
                    "description": "Deprecated. Please use product and type fields instead."
                },
                "name": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "commitment_term": {
                    "type": "integer"
                },
                "unit_price": {
                    "type": "string",
                    "description": "(deprecated. unit_price is moved into TermBillingOptions. For backward compatibility, this field reflect \"Prepaid\" price at the offer level.)"
                },
                "billing_options": {
                    "items": {
                        "$ref": "#/definitions/TermBillingOptions"
                    },
                    "type": "array"
                },
                "version": {
                    "type": "string"
                },
                "offer_context_id": {
                    "type": "string"
                },
                "product_charge_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "version",
                "description",
                "product",
                "type",
                "region",
                "currency",
                "commitment_term",
                "unit_price"
            ],
            "type": "object",
            "example": {
                "description": "VMware Cloud on Amazon Web Services",
                "product": "HOST",
                "product_type": null,
                "name": "VMware Cloud on AWS",
                "region": "US_WEST_2",
                "commitment_term": 12,
                "unit_price": "51987.0",
                "currency": "USD",
                "version": "1.0",
                "offer_context_id": null,
                "product_charge_id": null,
                "type": "i3.metal",
                "product_id": "VMC-AWS"
            },
            "description": "Holder for the term offer instances."
        },
        "AmiInfo": {
            "type": "object",
            "description": "the AmiInfo used for deploying esx of the sddc",
            "properties": {
                "instance_type": {
                    "type": "string",
                    "description": "instance type of the esx ami"
                },
                "region": {
                    "type": "string",
                    "description": "the region of the esx ami"
                },
                "id": {
                    "type": "string",
                    "description": "the ami id for the esx"
                },
                "name": {
                    "type": "string",
                    "description": "the name of the esx ami"
                }
            }
        },
        "edgeVnicAddressGroup": {
            "type": "object",
            "properties": {
                "subnetPrefixLength": {
                    "type": "string",
                    "description": "Subnet prefix length of the primary IP address."
                },
                "secondaryAddresses": {
                    "description": "Secondary IP addresses of the NSX Edge vnic address group. Optional.",
                    "$ref": "#/definitions/secondaryAddresses"
                },
                "primaryAddress": {
                    "type": "string",
                    "description": "Primary IP address of the vnic interface. Required."
                },
                "subnetMask": {
                    "type": "string"
                }
            },
            "description": "Address group configuration of the NSX Edge vnic. An interface can have one primary and multiple secondary IP addresses."
        },
        "VpcInfo": {
            "type": "object",
            "properties": {
                "vpc_cidr": {
                    "type": "string"
                },
                "vgw_id": {
                    "type": "string"
                },
                "esx_public_security_group_id": {
                    "type": "string"
                },
                "vif_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "set of virtual interfaces attached to the sddc"
                },
                "vm_security_group_id": {
                    "type": "string"
                },
                "route_table_id": {
                    "type": "string",
                    "description": "(deprecated)"
                },
                "edge_subnet_id": {
                    "type": "string",
                    "description": "Id of the NSX edge associated with this VPC (deprecated)"
                },
                "id": {
                    "type": "string",
                    "description": "vpc id"
                },
                "api_association_id": {
                    "type": "string",
                    "description": "Id of the association between subnet and route-table (deprecated)"
                },
                "api_subnet_id": {
                    "type": "string",
                    "description": "Id associated with this VPC (deprecated)"
                },
                "private_subnet_id": {
                    "type": "string",
                    "description": "(deprecated)"
                },
                "private_association_id": {
                    "type": "string",
                    "description": "(deprecated)"
                },
                "esx_security_group_id": {
                    "type": "string"
                },
                "subnet_id": {
                    "type": "string",
                    "description": "(deprecated)"
                },
                "internet_gateway_id": {
                    "type": "string"
                },
                "security_group_id": {
                    "type": "string"
                },
                "association_id": {
                    "type": "string",
                    "description": "(deprecated)"
                },
                "vgw_route_table_id": {
                    "type": "string",
                    "description": "Route table which contains the route to VGW (deprecated)"
                },
                "edge_association_id": {
                    "type": "string",
                    "description": "Id of the association between edge subnet and route-table (deprecated)"
                },
                "provider": {
                    "type": "string"
                },
                "peering_connection_id": {
                    "type": "string",
                    "description": "(deprecated)"
                },
                "network_type": {
                    "type": "string"
                },
                "available_zones": {
                    "items": {
                        "$ref": "#/definitions/AvailableZoneInfo"
                    },
                    "type": "array"
                },
                "routetables": {
                    "additionalProperties": {
                        "$ref": "#/definitions/RouteTableInfo"
                    },
                    "type": "object",
                    "description": "map from routeTableName to routeTableInfo"
                }
            }
        },
        "PopInfo": {
            "required": [
                "ami_infos"
            ],
            "type": "object",
            "description": "Present a SDDC PoP information.",
            "properties": {
                "ami_infos": {
                    "additionalProperties": {
                        "$ref": "#/definitions/PopAmiInfo"
                    },
                    "type": "object",
                    "description": "A map of [region name of PoP / PoP-AMI]:[PopAmiInfo]."
                },
                "created_at": {
                    "type": "string",
                    "description": "The PopInfo (or PoP AMI) created time. Using ISO 8601 date-time pattern.",
                    "format": "date-time"
                },
                "service_infos": {
                    "additionalProperties": {
                        "$ref": "#/definitions/PopServiceInfo"
                    },
                    "type": "object",
                    "description": "A map of [service type]:[PopServiceInfo]"
                },
                "id": {
                    "type": "string",
                    "description": "UUID of the PopInfo",
                    "format": "UUID"
                },
                "manifest_version": {
                    "type": "string",
                    "description": "version of the manifest."
                }
            }
        },
        "ConfigSpec": {
            "type": "object",
            "description": "Represents a configuration spec for any sddc provision operation.",
            "properties": {
                "expiry_in_days": {
                    "type": "integer",
                    "description": "Indicates after how many days the sddc should expire"
                },
                "availability": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/InstanceTypeConfig"
                        },
                        "type": "array"
                    },
                    "type": "object",
                    "description": "Map of region to instance types available in that region"
                }
            }
        },
        "EniInfo": {
            "type": "object",
            "description": "Information of the x-eni created.",
            "properties": {
                "subnet_id": {
                    "type": "string",
                    "description": "Subnet it belongs to."
                },
                "id": {
                    "type": "string",
                    "description": "Interface ID."
                },
                "security_group_id": {
                    "type": "string",
                    "description": "Security Group of Eni."
                },
                "private_ip": {
                    "type": "string",
                    "description": "Private ip of eni."
                },
                "mac_address": {
                    "type": "string",
                    "description": "Mac address of nic."
                }
            }
        },
        "dnsConfig": {
            "type": "object",
            "properties": {
                "featureType": {
                    "type": "string"
                },
                "logging": {
                    "description": "DNS logging setting.",
                    "$ref": "#/definitions/logging"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Value is true if feature is enabled. Default value is true. Optional."
                },
                "dnsViews": {
                    "description": "List of DNS views.",
                    "$ref": "#/definitions/dnsViews"
                },
                "listeners": {
                    "description": "List of DNS listeners.",
                    "$ref": "#/definitions/dnsListeners"
                },
                "version": {
                    "type": "integer",
                    "description": "Version number tracking each configuration change. To avoid problems with overwriting changes, always retrieve and modify the latest configuration to include the current version number in your request. If you provide a version number which is not current, the request is rejected. If you omit the version number, the request is accepted but may overwrite any current changes if your change is not in sync with the latest change.",
                    "format": "int64"
                },
                "template": {
                    "minLength": 0,
                    "type": "string",
                    "maxLength": 255
                },
                "cacheSize": {
                    "type": "integer",
                    "description": "The cache size of the DNS service.",
                    "format": "int64"
                },
                "dnsServers": {
                    "$ref": "#/definitions/ipAddresses"
                }
            },
            "description": "DNS configuration"
        },
        "ProvisionSpec": {
            "type": "object",
            "description": "Represents a provisioning spec for a sddc",
            "properties": {
                "provider": {
                    "additionalProperties": {
                        "$ref": "#/definitions/SddcConfigSpec"
                    },
                    "type": "object",
                    "description": "Map of provider to sddc config spec"
                }
            }
        },
        "SubInterfaces": {
            "type": "object",
            "properties": {
                "subInterfaces": {
                    "items": {
                        "$ref": "#/definitions/subInterface"
                    },
                    "type": "array",
                    "description": "List of sub interfaces."
                }
            }
        },
        "KmsVpcEndpoint": {
            "type": "object",
            "properties": {
                "vpc_endpoint_id": {
                    "type": "string",
                    "description": "The identifier of the VPC endpoint created to AWS Key Management Service"
                },
                "network_interface_ids": {
                    "items": {
                        "type": "string",
                        "description": "A list of network interfaces in the VPC endpoint to AWS Key Management Service"
                    },
                    "type": "array"
                }
            }
        },
        "SddcLinkConfig": {
            "type": "object",
            "properties": {
                "customer_subnet_ids": {
                    "items": {
                        "type": "string",
                        "description": "A list of AWS subnet IDs to create links to in the customer's account"
                    },
                    "type": "array"
                },
                "connected_account_id": {
                    "type": "string",
                    "description": "Determines which connected customer account to link to"
                }
            }
        },
        "sddcNetworkDhcpConfig": {
            "type": "object",
            "properties": {
                "ipPools": {
                    "items": {
                        "$ref": "#/definitions/sddcNetworkDhcpIpPool"
                    },
                    "type": "array",
                    "description": "List of IP pools in DHCP configuration."
                }
            },
            "description": "DHCP configuration for the logical network."
        },
        "l2vpnStats": {
            "type": "object",
            "properties": {
                "tunnelStatus": {
                    "type": "string",
                    "description": "Status of the tunnel (UP/DOWN)."
                },
                "establishedDate": {
                    "type": "integer",
                    "description": "Tunnel established date.",
                    "format": "int64"
                },
                "name": {
                    "type": "string",
                    "description": "User defined name of the site."
                },
                "droppedRxPackets": {
                    "type": "integer",
                    "description": "Number of received packets dropped."
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "Cipher used in encryption."
                },
                "failureMessage": {
                    "type": "string",
                    "description": "Reason for the tunnel down."
                },
                "txBytesFromLocalSubnet": {
                    "type": "integer",
                    "description": "Number of bytes transferred from local subnet."
                },
                "rxBytesOnLocalSubnet": {
                    "type": "integer",
                    "description": "Number of bytes received on the local subnet."
                },
                "droppedTxPackets": {
                    "type": "integer",
                    "description": "Number of transferred packets dropped."
                },
                "lastUpdatedTime": {
                    "type": "integer",
                    "description": "Time stamp of the statistics collection.",
                    "format": "int64"
                }
            },
            "description": "L2 VPN status and statistics of a single L2 VPN site."
        },
        "featureCapabilities": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "integer",
                    "description": "Time stamp value at which the feature capabilities were retrieved.",
                    "format": "int64"
                },
                "featureCapabilities": {
                    "items": {
                        "$ref": "#/definitions/featureCapability"
                    },
                    "type": "array",
                    "description": "List of feature capability information."
                }
            },
            "description": "List of features and their capability details based on NSX Edge appliance form factor."
        },
        "TrafficShapingPolicy": {
            "type": "object",
            "properties": {
                "burstSize": {
                    "type": "integer",
                    "format": "int64"
                },
                "averageBandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "peakBandwidth": {
                    "type": "integer",
                    "format": "int64"
                },
                "enabled": {
                    "type": "boolean"
                },
                "inherited": {
                    "type": "boolean"
                }
            }
        },
        "ConnectivityValidationInput": {
            "type": "object",
            "properties": {
                "id": {
                    "enum": [
                        "HOSTNAME",
                        "HOST_IP",
                        "HOSTNAME_OR_IP"
                    ],
                    "type": "string",
                    "description": "input value type, i.e. HOSTNAME_OR_IP, HOST_IP, HOSTNAME. Accept FQDN or IP address as input value when id = HOSTNAME_OR_IP, accept FQDN ONLY when id = HOSTNAME, accept IP address ONLY when id = HOST_IP."
                },
                "value": {
                    "type": "string",
                    "description": "the FQDN or IP address to run the test against, use \\#primary-dns or \\#secondary-dns as the on-prem primary/secondary DNS server IP."
                },
                "label": {
                    "type": "string",
                    "description": "(Optional, for UI display only) input value label."
                }
            }
        },
        "firewallRules": {
            "type": "object",
            "properties": {
                "firewallRules": {
                    "items": {
                        "$ref": "#/definitions/nsxfirewallrule"
                    },
                    "type": "array",
                    "description": "Ordered list of firewall rules."
                }
            },
            "description": "Ordered list of firewall rules."
        },
        "ipsecGlobalConfig": {
            "type": "object",
            "properties": {
                "psk": {
                    "minLength": 0,
                    "type": "string",
                    "description": "IPsec Global Pre Shared Key. Maximum characters is 128. Required when peerIp is configured as 'any' in NSX Edge IPsec Site configuration.",
                    "maxLength": 128
                },
                "caCertificates": {
                    "description": "CA certificate list. Optional.",
                    "$ref": "#/definitions/caCertificates"
                },
                "serviceCertificate": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Certificate name or identifier. Required when x.509 is selected as the authentication mode.",
                    "maxLength": 255
                },
                "crlCertificates": {
                    "description": "CRL certificate list. Optional.",
                    "$ref": "#/definitions/crlCertificates"
                },
                "extension": {
                    "minLength": 0,
                    "type": "string",
                    "maxLength": 1024
                }
            },
            "description": "IPsec Global configuration details."
        },
        "ComputeGatewayTemplate": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/GatewayTemplate"
                },
                {
                    "properties": {
                        "logical_networks": {
                            "items": {
                                "$ref": "#/definitions/LogicalNetwork"
                            },
                            "type": "array"
                        },
                        "nat_rules": {
                            "items": {
                                "$ref": "#/definitions/NatRule"
                            },
                            "type": "array"
                        },
                        "l2_vpn": {
                            "items": {
                                "$ref": "#/definitions/L2Vpn"
                            },
                            "type": "object"
                        }
                    }
                }
            ]
        },
        "SddcResourceConfig": {
            "discriminator": "provider",
            "required": [
                "provider"
            ],
            "type": "object",
            "properties": {
                "mgmt_appliance_network_name": {
                    "type": "string",
                    "description": "Name for management appliance network."
                },
                "nsxt": {
                    "type": "boolean",
                    "description": "if true, NSX-T UI is enabled."
                },
                "mgw_id": {
                    "type": "string",
                    "description": "Management Gateway Id"
                },
                "nsx_mgr_url": {
                    "type": "string",
                    "description": "URL of the NSX Manager"
                },
                "psc_management_ip": {
                    "type": "string",
                    "description": "PSC internal management IP"
                },
                "psc_url": {
                    "type": "string",
                    "description": "URL of the PSC server"
                },
                "cgws": {
                    "items": {
                        "type": "string",
                        "description": "set of compute gateway ids configured in the sddc"
                    },
                    "type": "array"
                },
                "availability_zones": {
                    "items": {
                        "type": "string",
                        "description": "Name of the availability zone."
                    },
                    "type": "array",
                    "description": "Availability zones over which esx hosts are provisioned. MultiAZ SDDCs will have hosts provisioned over two availability zones while SingleAZ SDDCs will provision over one."
                },
                "management_ds": {
                    "type": "string",
                    "description": "The ManagedObjectReference of the management Datastore"
                },
                "nsx_api_public_endpoint_url": {
                    "type": "string",
                    "description": "nsx api entire base url"
                },
                "custom_properties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "cloud_password": {
                    "type": "string",
                    "description": "Password for vCenter SDDC administrator"
                },
                "provider": {
                    "enum": [
                        "AWS",
                        "ZEROCLOUD"
                    ],
                    "type": "string",
                    "description": "Discriminator for additional properties"
                },
                "clusters": {
                    "items": {
                        "$ref": "#/definitions/Cluster"
                    },
                    "type": "array",
                    "description": "List of clusters in the SDDC."
                },
                "vc_management_ip": {
                    "type": "string",
                    "description": "vCenter internal management IP"
                },
                "sddc_networks": {
                    "items": {
                        "type": "string",
                        "description": "set of network ids configured in the sddc"
                    },
                    "type": "array"
                },
                "cloud_username": {
                    "type": "string",
                    "description": "Username for vCenter SDDC administrator"
                },
                "esx_hosts": {
                    "items": {
                        "$ref": "#/definitions/AwsEsxHost"
                    },
                    "type": "array"
                },
                "nsx_mgr_management_ip": {
                    "type": "string",
                    "description": "NSX Manager internal management IP"
                },
                "vc_instance_id": {
                    "type": "string",
                    "description": "unique id of the vCenter server"
                },
                "esx_cluster_id": {
                    "type": "string",
                    "description": "Cluster Id to add ESX workflow"
                },
                "vc_public_ip": {
                    "type": "string",
                    "description": "vCenter public IP"
                },
                "skip_creating_vxlan": {
                    "type": "boolean",
                    "description": "skip creating vxlan for compute gateway for SDDC provisioning"
                },
                "vc_url": {
                    "type": "string",
                    "description": "URL of the vCenter server"
                },
                "sddc_manifest": {
                    "$ref": "#/definitions/SddcManifest"
                },
                "vxlan_subnet": {
                    "type": "string",
                    "description": "VXLAN IP subnet"
                },
                "cloud_user_group": {
                    "type": "string",
                    "description": "Group name for vCenter SDDC administrator"
                },
                "management_rp": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "description": "region in which sddc is deployed"
                },
                "witness_availability_zone": {
                    "type": "string",
                    "description": "Availability zone where the witness node is provisioned for a MultiAZ SDDC. This is null for a SingleAZ SDDC."
                },
                "sddc_id": {
                    "type": "string",
                    "description": "sddc identifier"
                },
                "pop_agent_xeni_connection": {
                    "type": "object",
                    "$ref": "#/definitions/PopAgentXeniConnection"
                },
                "nsx_controller_ips": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "List of Controller IPs"
                },
                "esx_host_subnet": {
                    "type": "string",
                    "description": "ESX host subnet"
                },
                "sso_domain": {
                    "type": "string",
                    "description": "The SSO domain name to use for vSphere users"
                },
                "deployment_type": {
                    "enum": [
                        "SINGLE_AZ",
                        "MULTI_AZ"
                    ],
                    "type": "string",
                    "description": "Denotes if this is a SingleAZ SDDC or a MultiAZ SDDC."
                },
                "nsxt_addons": {
                    "type": "object",
                    "$ref": "#/definitions/NsxtAddons"
                },
                "dns_with_management_vm_private_ip": {
                    "type": "boolean",
                    "description": "if true, use the private IP addresses to register DNS records for the management VMs"
                }
            }
        },
        "AbstractEntity": {
            "required": [
                "created",
                "id",
                "user_id",
                "user_name",
                "updated",
                "updated_by_user_id",
                "version"
            ],
            "type": "object",
            "properties": {
                "updated": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_id": {
                    "type": "string",
                    "description": "User id that last updated this record"
                },
                "updated_by_user_id": {
                    "type": "string",
                    "description": "User id that last updated this record"
                },
                "created": {
                    "type": "string",
                    "format": "date-time"
                },
                "version": {
                    "format": "int32",
                    "type": "integer",
                    "example": 5,
                    "description": "Version of this entity"
                },
                "updated_by_user_name": {
                    "type": "string",
                    "description": "User name that last updated this record"
                },
                "user_name": {
                    "type": "string",
                    "description": "User name that last updated this record"
                },
                "id": {
                    "type": "string",
                    "description": "Unique ID for this entity",
                    "example": "1d1c83ee-e0b7-4de9-b660-9a9ca1d22f32"
                }
            }
        },
        "Vpn": {
            "type": "object",
            "properties": {
                "version": {
                    "readOnly": true,
                    "type": "string"
                },
                "on_prem_gateway_ip": {
                    "type": "string"
                },
                "on_prem_network_cidr": {
                    "type": "string"
                },
                "pfs_enabled": {
                    "type": "boolean"
                },
                "id": {
                    "readOnly": true,
                    "type": "string"
                },
                "channel_status": {
                    "$ref": "#/definitions/VpnChannelStatus"
                },
                "on_prem_nat_ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "internal_network_ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "tunnel_statuses": {
                    "items": {
                        "$ref": "#/definitions/VpnTunnelStatus"
                    },
                    "type": "array"
                },
                "encryption": {
                    "enum": [
                        "AES",
                        "AES256",
                        "AES_GCM",
                        "TRIPLE_DES",
                        "UNKNOWN"
                    ],
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "state": {
                    "readOnly": true,
                    "enum": [
                        "CONNECTED",
                        "DISCONNECTED",
                        "PARTIALLY_CONNECTED",
                        "UNKNOWN"
                    ],
                    "type": "string"
                },
                "dh_group": {
                    "enum": [
                        "DH2",
                        "DH5",
                        "DH14",
                        "DH15",
                        "DH16",
                        "UNKNOWN"
                    ],
                    "type": "string"
                },
                "authentication": {
                    "enum": [
                        "PSK",
                        "UNKNOWN"
                    ],
                    "type": "string"
                },
                "pre_shared_key": {
                    "type": "string"
                },
                "ike_option": {
                    "enum": [
                        "IKEV1",
                        "IKEV2"
                    ],
                    "type": "string"
                },
                "digest_algorithm": {
                    "enum": [
                        "SHA1",
                        "SHA_256"
                    ],
                    "type": "string"
                }
            }
        },
        "Sddc": {
            "required": [
                "provider",
                "created",
                "name",
                "sddc_state",
                "user_id",
                "user_name"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractEntity"
                },
                {
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "name for SDDC"
                        },
                        "sddc_state": {
                            "enum": [
                                "DEPLOYING",
                                "READY",
                                "DELETING",
                                "DELETION_FAILED",
                                "DELETED",
                                "FAILED"
                            ],
                            "type": "string"
                        },
                        "expiration_date": {
                            "type": "string",
                            "description": "Expiration date of a sddc in UTC (will be set if its applicable)",
                            "format": "date-time"
                        },
                        "org_id": {
                            "type": "string"
                        },
                        "sddc_type": {
                            "type": "string",
                            "description": "Type of the sddc"
                        },
                        "one_node_reduced_capacity": {
                            "type": "boolean",
                            "description": "Whether this sddc is reduced capacity 1NODE"
                        },
                        "provider": {
                            "enum": [
                                "AWS",
                                "ZEROCLOUD"
                            ],
                            "type": "string"
                        },
                        "account_link_state": {
                            "enum": [
                                "DELAYED",
                                "LINKED",
                                "UNLINKED"
                            ],
                            "type": "string",
                            "description": "Account linking state of the sddc"
                        },
                        "sddc_access_state": {
                            "type": "string",
                            "description": "Describes the access state of sddc, valid state is DISABLED or ENABLED"
                        },
                        "resource_config": {
                            "$ref": "#/definitions/AwsSddcResourceConfig"
                        }
                    }
                }
            ]
        },
        "GatewayTemplate": {
            "type": "object",
            "description": "Describes common properties for MGW and CGW configuration templates",
            "properties": {
                "public_ip": {
                    "$ref": "#/definitions/SddcPublicIp"
                },
                "primary_dns": {
                    "type": "string"
                },
                "secondary_dns": {
                    "type": "string"
                },
                "firewall_rules": {
                    "items": {
                        "$ref": "#/definitions/FirewallRule"
                    },
                    "type": "array"
                },
                "vpns": {
                    "items": {
                        "$ref": "#/definitions/Vpn"
                    },
                    "type": "array"
                }
            }
        },
        "metaDashboardStats": {
            "type": "object",
            "properties": {
                "vnics": {
                    "items": {
                        "$ref": "#/definitions/vnic"
                    },
                    "type": "array",
                    "description": "Statistics data is collected for these vNICs."
                },
                "endTime": {
                    "type": "integer",
                    "description": "End time in seconds.",
                    "format": "int64"
                },
                "startTime": {
                    "type": "integer",
                    "description": "Start time in seconds.",
                    "format": "int64"
                },
                "interval": {
                    "type": "integer",
                    "description": "Time interval in seconds.",
                    "format": "int32"
                }
            },
            "description": "Start time, end time and interval details."
        },
        "Task": {
            "required": [
                "start_time",
                "status",
                "sub_status",
                "task_type"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractEntity"
                },
                {
                    "properties": {
                        "status": {
                            "enum": [
                                "STARTED",
                                "CANCELING",
                                "FINISHED",
                                "FAILED",
                                "CANCELED"
                            ],
                            "type": "string"
                        },
                        "localized_error_message": {
                            "type": "string"
                        },
                        "resource_id": {
                            "type": "string",
                            "description": "UUID of the resource the task is acting upon"
                        },
                        "parent_task_id": {
                            "type": "string",
                            "description": "If this task was created by another task - this provides the linkage. Mostly for debugging."
                        },
                        "task_version": {
                            "type": "string"
                        },
                        "correlation_id": {
                            "type": "string",
                            "description": "(Optional) Client provided uniqifier to make task creation idempotent. Be aware not all tasks support this. For tasks that do - supplying the same correlation Id, for the same task type, within a predefined window will ensure the operation happens at most once."
                        },
                        "start_resource_entity_version": {
                            "format": "int32",
                            "type": "integer",
                            "example": 0,
                            "description": "Entity version of the resource at the start of the task. This is only set for some task types."
                        },
                        "sub_status": {
                            "type": "string"
                        },
                        "task_type": {
                            "type": "string"
                        },
                        "start_time": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "task_progress_phases": {
                            "items": {
                                "$ref": "#/definitions/TaskProgressPhase"
                            },
                            "type": "array",
                            "description": "Task progress phases involved in current task execution"
                        },
                        "error_message": {
                            "type": "string"
                        },
                        "org_id": {
                            "type": "string",
                            "example": "1d1c83ee-e0b7-4de9-b660-9a9ca1d22f32"
                        },
                        "end_resource_entity_version": {
                            "format": "int32",
                            "type": "integer",
                            "example": 5,
                            "description": "Entity version of the resource at the end of the task. This is only set for some task types."
                        },
                        "service_errors": {
                            "items": {
                                "$ref": "#/definitions/ServiceError"
                            },
                            "type": "array",
                            "description": "Service errors returned from SDDC services."
                        },
                        "org_type": {
                            "type": "string"
                        },
                        "estimated_remaining_minutes": {
                            "format": "int32",
                            "type": "integer",
                            "example": 4,
                            "description": "Estimated remaining time in minute of the task execution, < 0 means no estimation for the task."
                        },
                        "params": {
                            "type": "object"
                        },
                        "progress_percent": {
                            "format": "int32",
                            "type": "integer",
                            "example": 75,
                            "description": "Estimated progress percentage the task executed"
                        },
                        "phase_in_progress": {
                            "type": "string",
                            "description": "The current in progress phase ID in the task execution, if none in progress, empty string returned."
                        },
                        "resource_type": {
                            "type": "string",
                            "description": "Type of resource being acted upon"
                        },
                        "end_time": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            ]
        },
        "nsxfirewallrule": {
            "type": "object",
            "properties": {
                "ruleType": {
                    "type": "string",
                    "description": "Identifies the type of the rule. internal_high or user."
                },
                "description": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Description for the rule",
                    "maxLength": 1024
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Identifier for the rule.",
                    "format": "int64"
                },
                "matchTranslated": {
                    "type": "boolean",
                    "description": "Defines the order of NAT and Firewall pipeline. When false, firewall happens before NAT. Default : false"
                },
                "invalidApplication": {
                    "type": "boolean"
                },
                "direction": {
                    "type": "string",
                    "description": "Direction. Possible values in or out. Default is 'any'."
                },
                "statistics": {
                    "description": "Statistics for the rule",
                    "$ref": "#/definitions/firewallRuleStats"
                },
                "name": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Name for the rule.",
                    "maxLength": 255
                },
                "invalidSource": {
                    "type": "boolean"
                },
                "loggingEnabled": {
                    "type": "boolean",
                    "description": "Enable logging for the rule."
                },
                "destination": {
                    "description": "List of destinations. Default is any.",
                    "$ref": "#/definitions/addressFWSourceDestination"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable rule."
                },
                "application": {
                    "description": "List of applications. Default is any.",
                    "$ref": "#/definitions/application"
                },
                "source": {
                    "description": "List of sources. Default is any.",
                    "$ref": "#/definitions/addressFWSourceDestination"
                },
                "action": {
                    "type": "string",
                    "description": "Action. Values : accept, deny"
                },
                "invalidDestination": {
                    "type": "boolean"
                },
                "ruleTag": {
                    "type": "integer",
                    "description": "Rule tag. Used to specify user-defined ruleId. If not specified NSX Manager will generate ruleId.",
                    "format": "int64"
                }
            },
            "description": "Firewall Rule"
        },
        "InteractionPermissions": {
            "type": "object",
            "properties": {
                "managePermission": {
                    "type": "boolean"
                },
                "viewPermission": {
                    "type": "boolean"
                }
            }
        },
        "SddcPatchRequest": {
            "type": "object",
            "description": "Patch request body for SDDC",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The new name of the SDDC to be changed to."
                }
            }
        },
        "MaintenanceWindow": {
            "type": "object",
            "properties": {
                "day_of_week": {
                    "enum": [
                        "SUNDAY",
                        "MONDAY",
                        "TUESDAY",
                        "WEDNESDAY",
                        "THURSDAY",
                        "FRIDAY",
                        "SATURDAY"
                    ],
                    "type": "string"
                },
                "hour_of_day": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "VmcLocale": {
            "type": "object",
            "properties": {
                "locale": {
                    "type": "string",
                    "description": "The locale to be used for translating responses for the session"
                }
            }
        },
        "ipsec": {
            "type": "object",
            "properties": {
                "featureType": {
                    "type": "string"
                },
                "logging": {
                    "description": "Configure logging for the feature on NSX Edge appliance. Logging is disabled by default. Optional.",
                    "$ref": "#/definitions/logging"
                },
                "global": {
                    "description": "IPsec Global configuration details.",
                    "$ref": "#/definitions/ipsecGlobalConfig"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Value is true if feature is enabled. Default value is true. Optional."
                },
                "sites": {
                    "description": "IPsec Site configuration details.",
                    "$ref": "#/definitions/ipsecSites"
                },
                "disableEvent": {
                    "type": "boolean",
                    "description": "Enable/disable event generation on NSX Edge appliance for IPsec."
                },
                "version": {
                    "type": "integer",
                    "description": "Version number tracking each configuration change. To avoid problems with overwriting changes, always retrieve and modify the latest configuration to include the current version number in your request. If you provide a version number which is not current, the request is rejected. If you omit the version number, the request is accepted but may overwrite any current changes if your change is not in sync with the latest change.",
                    "format": "int64"
                },
                "template": {
                    "minLength": 0,
                    "type": "string",
                    "maxLength": 255
                }
            },
            "description": "NSX Edge IPsec configuration details."
        },
        "AvailableZoneInfo": {
            "type": "object",
            "properties": {
                "subnets": {
                    "items": {
                        "$ref": "#/definitions/Subnet"
                    },
                    "type": "array",
                    "description": null
                },
                "name": {
                    "type": "string",
                    "description": "available zone name"
                }
            }
        },
        "EbsBackedVsanConfig": {
            "type": "object",
            "description": "information for EBS-backed VSAN configuration",
            "properties": {
                "instance_type": {
                    "type": "string",
                    "description": "instance type for EBS-backed VSAN configuration"
                }
            }
        },
        "caCertificates": {
            "type": "object",
            "properties": {
                "caCertificate": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "description": "CA certificate list. Optional."
        },
        "ipsecSites": {
            "type": "object",
            "properties": {
                "sites": {
                    "items": {
                        "$ref": "#/definitions/ipsecSite"
                    },
                    "type": "array"
                }
            },
            "description": "List of IPsec sites for NSX Edge."
        },
        "natRules": {
            "type": "object",
            "properties": {
                "natRulesDtos": {
                    "items": {
                        "$ref": "#/definitions/nsxnatrule"
                    },
                    "type": "array",
                    "description": "Ordered list of NAT rules."
                }
            },
            "description": "Ordered list of NAT rules."
        },
        "AwsAgent": {
            "type": "object",
            "x-vmw-vapi-discriminated-by": "AWS",
            "allOf": [
                {
                    "$ref": "#/definitions/Agent"
                },
                {
                    "properties": {
                        "instance_id": {
                            "type": "string"
                        },
                        "key_pair": {
                            "$ref": "#/definitions/AwsKeyPair"
                        }
                    }
                }
            ]
        },
        "VsanConfigConstraints": {
            "required": [
                "num_hosts",
                "min_capacity",
                "max_capacity",
                "recommended_capacities"
            ],
            "type": "object",
            "description": "This describes the possible physical storage capacity choices for use with a given VsanStorageDesigner implementation.  These choices are specific to a customer-defined number of hosts per cluster.\n",
            "properties": {
                "max_capacity": {
                    "type": "integer",
                    "description": "Maximum capacity supported for cluster (GiB).",
                    "format": "int64"
                },
                "recommended_capacities": {
                    "items": {
                        "type": "integer",
                        "description": "Recommended capacity.",
                        "format": "int64"
                    },
                    "type": "array",
                    "description": "List of supported capacities which may offer preferable performance (GiB)."
                },
                "supported_capacity_increment": {
                    "type": "integer",
                    "description": "Increment to be added to min_capacity to result in a supported capacity (GiB).",
                    "format": "int64"
                },
                "min_capacity": {
                    "type": "integer",
                    "description": "Minimum capacity supported for cluster (GiB).",
                    "format": "int64"
                },
                "num_hosts": {
                    "type": "integer",
                    "description": "Number of hosts in cluster.",
                    "format": "int64"
                }
            }
        },
        "NatRule": {
            "type": "object",
            "properties": {
                "rule_type": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "internal_ports": {
                    "type": "string"
                },
                "public_ports": {
                    "type": "string"
                },
                "public_ip": {
                    "type": "string"
                },
                "internal_ip": {
                    "type": "string"
                },
                "action": {
                    "enum": [
                        "dnat",
                        "snat"
                    ],
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "type": "string"
                },
                "revision": {
                    "readOnly": true,
                    "type": "integer",
                    "description": "current revision of the list of nat rules, used to protect against concurrent modification (first writer wins)",
                    "format": "int32"
                }
            }
        },
        "addressFWSourceDestination": {
            "type": "object",
            "properties": {
                "exclude": {
                    "type": "boolean",
                    "description": "Exclude the specified source or destination."
                },
                "ipAddress": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "List of string. Can specify single IP address, range of IP address, or in CIDR format. Can define multiple."
                },
                "groupingObjectId": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "List of string. Id of cluster, datacenter, distributedPortGroup, legacyPortGroup, VirtualMachine, vApp, resourcePool, logicalSwitch, IPSet, securityGroup. Can define multiple."
                },
                "vnicGroupId": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "List of string. Possible values are vnic-index-[1-9], vse, external or internal. Can define multiple."
                }
            },
            "description": "Source or Destination for firewall rule. Default is 'any'."
        },
        "DataPermissions": {
            "type": "object",
            "properties": {
                "savePermission": {
                    "type": "boolean"
                },
                "publishPermission": {
                    "type": "boolean"
                }
            }
        },
        "firewallConfig": {
            "type": "object",
            "properties": {
                "firewallRules": {
                    "description": "Ordered list of firewall rules.",
                    "$ref": "#/definitions/firewallRules"
                },
                "featureType": {
                    "type": "string"
                },
                "version": {
                    "type": "integer",
                    "description": "Version number tracking each configuration change. To avoid problems with overwriting changes, always retrieve and modify the latest configuration to include the current version number in your request. If you provide a version number which is not current, the request is rejected. If you omit the version number, the request is accepted but may overwrite any current changes if your change is not in sync with the latest change.",
                    "format": "int64"
                },
                "template": {
                    "minLength": 0,
                    "type": "string",
                    "maxLength": 255
                },
                "globalConfig": {
                    "description": "Global configuration applicable to all rules.",
                    "$ref": "#/definitions/firewallGlobalConfig"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Value is true if feature is enabled. Default value is true. Optional."
                },
                "defaultPolicy": {
                    "description": "Default Policy.",
                    "$ref": "#/definitions/firewallDefaultPolicy"
                }
            },
            "description": "Firewall Configuration"
        },
        "ipAddresses": {
            "type": "object",
            "properties": {
                "ipAddress": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "List of IP addresses."
                }
            },
            "description": "IP address"
        },
        "AwsSubnet": {
            "type": "object",
            "properties": {
                "connected_account_id": {
                    "type": "string",
                    "description": "The connected account ID this subnet is accessible through. This is an internal ID formatted as a UUID specific to Skyscraper."
                },
                "region_name": {
                    "type": "string",
                    "description": "The region this subnet is in, usually in the form of country code, general location, and a number (ex. us-west-2)."
                },
                "availability_zone": {
                    "type": "string",
                    "description": "The availability zone this subnet is in, which should be the region name plus one extra letter (ex. us-west-2a)."
                },
                "subnet_id": {
                    "type": "string",
                    "description": "The subnet ID in AWS, provided in the form 'subnet-######'."
                },
                "subnet_cidr_block": {
                    "type": "string",
                    "description": "The CIDR block of the subnet, in the form of '#.#.#.#/#'."
                },
                "is_compatible": {
                    "type": "boolean",
                    "description": "Flag indicating whether this subnet is compatible. If true, this is a valid choice for the customer to deploy a SDDC in."
                },
                "vpc_id": {
                    "type": "string",
                    "description": "The VPC ID the subnet resides in within AWS. Tends to be 'vpc-#######'."
                },
                "vpc_cidr_block": {
                    "type": "string",
                    "description": "The CIDR block of the VPC, in the form of '#.#.#.#/#'."
                },
                "name": {
                    "type": "string",
                    "description": "Optional field (may not be provided by AWS), indicates the found name tag for the subnet."
                }
            }
        },
        "PopAgentXeniConnection": {
            "type": "object",
            "properties": {
                "default_subnet_route": {
                    "type": "string",
                    "description": "The gateway route ip fo the subnet."
                },
                "eni_info": {
                    "$ref": "#/definitions/EniInfo"
                }
            }
        },
        "IpsecTunnelStats": {
            "type": "object",
            "properties": {
                "tunnelStatus": {
                    "type": "string"
                },
                "peerSPI": {
                    "type": "string"
                },
                "rxBytesOnLocalSubnet": {
                    "type": "integer"
                },
                "establishedDate": {
                    "type": "string"
                },
                "peerSubnet": {
                    "type": "string"
                },
                "authenticationAlgorithm": {
                    "type": "string"
                },
                "tunnelState": {
                    "type": "string"
                },
                "txBytesFromLocalSubnet": {
                    "type": "integer"
                },
                "lastInformationalMessage": {
                    "type": "string"
                },
                "localSPI": {
                    "type": "string"
                },
                "encryptionAlgorithm": {
                    "type": "string"
                },
                "localSubnet": {
                    "type": "string"
                }
            }
        },
        "hostLeaseInfo": {
            "type": "object",
            "properties": {
                "macAddress": {
                    "type": "string",
                    "description": "MAC address of the client."
                },
                "ends": {
                    "type": "string",
                    "description": "End time of the lease."
                },
                "abandoned": {
                    "type": "string",
                    "description": "Time stamp of when IP address was marked as abandoned."
                },
                "cltt": {
                    "type": "string",
                    "description": "Client Last Transaction Time of the lease info."
                },
                "clientHostname": {
                    "type": "string",
                    "description": "Name of the client."
                },
                "starts": {
                    "type": "string",
                    "description": "Start time of the lease."
                },
                "bindingState": {
                    "type": "string",
                    "description": "Lease's binding state."
                },
                "hardwareType": {
                    "type": "string",
                    "description": "The hardware type on which the lease will be used."
                },
                "tsfp": {
                    "type": "string",
                    "description": "Time Sent From Partner of the lease info."
                },
                "uid": {
                    "type": "string",
                    "description": "Uid to identify the DHCP lease."
                },
                "nextBindingState": {
                    "type": "string",
                    "description": "Indicates what state the lease will move to when the current state expires."
                },
                "ipAddress": {
                    "type": "string",
                    "description": "IP address of the client."
                },
                "tstp": {
                    "type": "string",
                    "description": "Time Sent To Partner of the lease info."
                }
            },
            "description": "DHCP lease information."
        },
        "crlCertificates": {
            "type": "object",
            "properties": {
                "crlCertificate": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "description": "CRL certificate list. Optional."
        },
        "featureStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Status of the feature or service."
                },
                "configured": {
                    "type": "boolean",
                    "description": "Value is true if feature is configured."
                },
                "serverStatus": {
                    "type": "string",
                    "description": "Server status of the feature or service. Values are up and down."
                },
                "publishStatus": {
                    "type": "string",
                    "description": "Publish status of the feature, whether APPLIED or PERSISTED."
                },
                "service": {
                    "type": "string",
                    "description": "Name of the feature or service."
                }
            },
            "description": "Individual feature status."
        },
        "dnsViewMatch": {
            "type": "object",
            "properties": {
                "vnic": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ipSet": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ipAddress": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "description": "Dns view match"
        },
        "edgeSummary": {
            "type": "object",
            "properties": {
                "featureCapabilities": {
                    "description": "List of Features and their capability details based on Edge appliance form factor.",
                    "$ref": "#/definitions/featureCapabilities"
                },
                "edgeType": {
                    "type": "string",
                    "description": "NSX Edge type, whether 'gatewayServices' or 'distributedRouter'."
                },
                "logicalRouterScopes": {
                    "description": "Backing type scope (DistributedVirtualSwitch - VLAN, TransportZone -VXLAN) and its ID for the Distributed Logical Router.",
                    "$ref": "#/definitions/LogicalRouterScopes"
                },
                "recentJobInfo": {
                    "description": "Job information for the most recent configuration change carried out on the NSX Edge.",
                    "$ref": "#/definitions/edgeJob"
                },
                "hypervisorAssist": {
                    "type": "boolean"
                },
                "edgeAssistId": {
                    "type": "integer",
                    "description": "ID generated by NSX Manager for Distributed Logical Router only.",
                    "format": "int64"
                },
                "edgeStatus": {
                    "type": "string",
                    "description": "NSX Edge appliance health status identified by GREY (unknown status), GREEN (health checks are successful), YELLOW (intermittent health check failure), RED (none of the appliances are in serving state). If health check fails for 5 consecutive times for all appliance (2 for HA else 1) then status will turn from YELLOW to RED."
                },
                "edgeAssistInstanceName": {
                    "type": "string",
                    "description": "Name derived by NSX Manager only for Distributed Logical Router."
                },
                "objectId": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "NSX Edge ID."
                },
                "datacenterName": {
                    "type": "string",
                    "description": "Datacenter name where the NSX Edge is deployed."
                },
                "state": {
                    "type": "string",
                    "description": "Deployment state of the NSX Edge appliance. Values are 'deployed' when VMs have been deployed, 'undeployed' when no VMs are deployed and 'active' when Edge type is Distributed Logical Router and has no appliance deployed but is serving data path."
                },
                "clientHandle": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/ScopeInfo"
                },
                "type": {
                    "$ref": "#/definitions/ObjectType"
                },
                "revision": {
                    "type": "integer",
                    "format": "int64"
                },
                "vsmUuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "extendedAttributes": {
                    "items": {
                        "$ref": "#/definitions/ExtendedAttribute"
                    },
                    "type": "array"
                },
                "localEgressEnabled": {
                    "type": "boolean",
                    "description": "Value is true if local egress is enabled for UDLR traffic. Applicable only for Universal Distributed Logical Router."
                },
                "universalRevision": {
                    "type": "integer",
                    "format": "int64"
                },
                "allowedActions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "objectTypeName": {
                    "type": "string"
                },
                "isUpgradeAvailable": {
                    "type": "boolean",
                    "description": "Value is true if NSX Edge upgrade is available."
                },
                "isUniversal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "lrouterUuid": {
                    "type": "string",
                    "description": "Distributed Logical Router UUID provided by the NSX Controller."
                },
                "appliancesSummary": {
                    "description": "NSX Edge appliance summary.",
                    "$ref": "#/definitions/appliancesSummary"
                },
                "apiVersion": {
                    "type": "string",
                    "description": "REST API version applicable for the NSX Edge."
                },
                "tenantId": {
                    "type": "string",
                    "description": "Tenant ID for the NSX Edge."
                },
                "datacenterMoid": {
                    "type": "string",
                    "description": "vCenter MOID of the datacenter where the NSX Edge is deployed."
                },
                "numberOfConnectedVnics": {
                    "type": "integer",
                    "description": "Number of connected vnics that are configured on the NSX Edge.",
                    "format": "int32"
                }
            },
            "description": "NSX Edge summary. Read only."
        },
        "ipsecDashboardStats": {
            "type": "object",
            "properties": {
                "ipsecBytesOut": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array",
                    "description": "Tx transmitted bytes."
                },
                "ipsecBytesIn": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array",
                    "description": "Rx received bytes."
                },
                "ipsecTunnels": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array",
                    "description": "Number of Ipsec tunnels."
                }
            },
            "description": "Dashboard Statistics data for Ipsec."
        },
        "L2Vpn": {
            "required": [
                "sites"
            ],
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable (true) or disable (false) L2 VPN."
                },
                "sites": {
                    "items": {
                        "$ref": "#/definitions/Site"
                    },
                    "type": "array",
                    "description": "Array of L2 vpn site config."
                },
                "listener_ip": {
                    "type": "string",
                    "description": "Public uplink ip address. IP of external interface on which L2VPN service listens to."
                }
            }
        },
        "FirewallRuleScope": {
            "type": "object",
            "description": "Optional for FirewallRule. If not specified, defaults to 'any'.",
            "properties": {
                "grouping_object_ids": {
                    "items": {
                        "type": "string",
                        "description": "Id of IPAddresses grouping Objects available to the gateway."
                    },
                    "type": "array"
                },
                "vnic_group_ids": {
                    "items": {
                        "enum": [
                            "vse",
                            "internal",
                            "external",
                            "vnic-index-0",
                            "vnic-index-1",
                            "vnic-index-2",
                            "vnic-index-3",
                            "vnic-index-4",
                            "vnic-index-5",
                            "vnic-index-6",
                            "vnic-index-7",
                            "vnic-index-8",
                            "vnic-index-9"
                        ],
                        "type": "string",
                        "description": "vnic group id"
                    },
                    "type": "array"
                }
            }
        },
        "logging": {
            "type": "object",
            "properties": {
                "logLevel": {
                    "type": "string",
                    "description": "Log level. Valid values: emergency, alert, critical, error, warning, notice, info, debug."
                },
                "enable": {
                    "type": "boolean",
                    "description": "Logging enabled."
                }
            },
            "description": "logging."
        },
        "cbmStatistic": {
            "type": "object",
            "properties": {
                "vnic": {
                    "type": "integer",
                    "description": "Vnic index.",
                    "format": "int32"
                },
                "timestamp": {
                    "type": "integer",
                    "description": "Timestamp value.",
                    "format": "int64"
                },
                "out": {
                    "type": "number",
                    "description": "Tx rate (Kilobits per second - kbps)",
                    "format": "double"
                },
                "in": {
                    "type": "number",
                    "description": "Rx rate (Kilobits per second - kbps)",
                    "format": "double"
                }
            },
            "description": "Statistics data for each vnic."
        },
        "dnsView": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the DNS view."
                },
                "viewMatch": {
                    "description": "Rules that match the DNS query to this view. The rule can be ipAddress, or ipSet. Defaults to ipAddress 'any' and 'any' vnic.",
                    "$ref": "#/definitions/dnsViewMatch"
                },
                "recursion": {
                    "type": "boolean",
                    "description": "Recursion enabled on DNS view."
                },
                "viewId": {
                    "type": "string",
                    "description": "Identifier for the DNS view."
                },
                "forwarders": {
                    "description": "DNS forwarders.",
                    "$ref": "#/definitions/dnsForwarders"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "DNS view is enabled."
                }
            },
            "description": "DNS View"
        },
        "VpnChannelStatus": {
            "type": "object",
            "properties": {
                "channel_status": {
                    "readOnly": true,
                    "enum": [
                        "CONNECTED",
                        "DISCONNECTED",
                        "UNKNOWN"
                    ],
                    "type": "string"
                },
                "channel_state": {
                    "readOnly": true,
                    "type": "string"
                },
                "last_info_message": {
                    "readOnly": true,
                    "type": "string"
                },
                "failure_message": {
                    "readOnly": true,
                    "type": "string"
                }
            }
        },
        "dashboardStatistics": {
            "type": "object",
            "properties": {
                "dataDto": {
                    "description": "Dashboard Statistics data.",
                    "$ref": "#/definitions/dashboardData"
                },
                "metaDto": {
                    "description": "Start time, end time and interval details.",
                    "$ref": "#/definitions/metaDashboardStats"
                }
            },
            "description": "Dashboard Statistics data."
        },
        "AccountLinkConfig": {
            "type": "object",
            "properties": {
                "delay_account_link": {
                    "default": false,
                    "type": "boolean",
                    "description": "Boolean flag identifying whether account linking should be delayed or not for the SDDC."
                }
            }
        },
        "Subnet": {
            "type": "object",
            "description": "(as there's already one SubnetInfo, use Subnet instead)",
            "properties": {
                "subnet_id": {
                    "type": "string",
                    "description": "subnet id"
                },
                "name": {
                    "type": "string",
                    "description": "subnet name"
                },
                "route_tables": {
                    "items": {
                        "$ref": "#/definitions/SubnetRouteTableInfo"
                    },
                    "type": "array"
                }
            }
        },
        "SddcConfigSpec": {
            "type": "object",
            "description": "Represents a configuration spec for a sddc",
            "properties": {
                "sddc_type_config_spec": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ConfigSpec"
                    },
                    "type": "object",
                    "description": "Map of sddc type to config spec"
                },
                "region_display_names": {
                    "additionalProperties": {
                        "type": "string",
                        "description": "Region display label"
                    },
                    "type": "object",
                    "description": "The region name to display names mapping"
                }
            }
        },
        "ErrorResponse": {
            "required": [
                "error_code",
                "error_messages",
                "status",
                "path",
                "retryable"
            ],
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "HTTP status code"
                },
                "path": {
                    "type": "string",
                    "description": "Originating request URI"
                },
                "retryable": {
                    "default": false,
                    "type": "boolean",
                    "description": "If true, client should retry operation"
                },
                "error_code": {
                    "type": "string",
                    "description": "unique error code"
                },
                "error_messages": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "localized error messages"
                }
            }
        },
        "AwsEsxHost": {
            "type": "object",
            "x-vmw-vapi-discriminated-by": "AWS",
            "allOf": [
                {
                    "$ref": "#/definitions/EsxHost"
                },
                {
                    "properties": {
                        "internal_public_ip_pool": {
                            "items": {
                                "$ref": "#/definitions/SddcPublicIp"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "OrgProperties": {
            "type": "object",
            "properties": {
                "values": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object",
                    "description": "A map of string properties to values."
                }
            }
        },
        "VsanClusterReconfigConstraints": {
            "required": [
                "reconfig_biases",
                "default_reconfig_bias_id",
                "hosts",
                "available_capacities",
                "default_capacities"
            ],
            "type": "object",
            "properties": {
                "reconfig_biases": {
                    "items": {
                        "$ref": "#/definitions/VsanClusterReconfigBias"
                    },
                    "type": "array",
                    "description": "Biases to reconfigure vSAN in an existing cluster."
                },
                "available_capacities": {
                    "additionalProperties": {
                        "items": {
                            "$ref": "#/definitions/VsanAvailableCapacity"
                        },
                        "type": "array"
                    },
                    "type": "object",
                    "description": "A map of VsanClusterReconfigBias id to the list of VsanAvailableCapacity. It gives all of available vSAN capacities for each of reconfiguration biases.\n"
                },
                "default_capacities": {
                    "additionalProperties": {
                        "$ref": "#/definitions/VsanAvailableCapacity"
                    },
                    "type": "object",
                    "description": "A map of VsanClusterReconfigBias id to a VsanAvailableCapacity. It gives the default VsanAvailableCapacity for each of reconfiguration biases.\n"
                },
                "hosts": {
                    "type": "integer",
                    "description": "The number of hosts in a cluster for the constraints.",
                    "format": "int32"
                },
                "default_reconfig_bias_id": {
                    "type": "string",
                    "description": "The id of default VsanClusterReconfigBias for this constraints."
                }
            },
            "x-vmc-vsan-api": null,
            "description": "Storage constraint information for reconfiguring vSAN in existing cluster."
        },
        "firewallDefaultPolicy": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action. Default is deny. Supported values accept, deny"
                },
                "loggingEnabled": {
                    "type": "boolean",
                    "description": "Enable logging for the rule."
                }
            },
            "description": "Firewall default policy. Default is deny."
        },
        "VpcInfoSubnets": {
            "type": "object",
            "allOf": [
                {
                    "properties": {
                        "vpc_id": {
                            "type": "string",
                            "description": "The ID of the VPC these subnets belong to."
                        },
                        "cidr_block": {
                            "type": "string",
                            "description": "The overall CIDR block of the VPC. This is the AWS primary CIDR block."
                        },
                        "description": {
                            "type": "string",
                            "description": "The description of the VPC; usually it's name or id."
                        },
                        "subnets": {
                            "items": {
                                "$ref": "#/definitions/SubnetInfo"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "nsxfirewallservice": {
            "type": "object",
            "properties": {
                "sourcePort": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "List of source ports."
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol."
                },
                "port": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "List of destination ports."
                },
                "icmpType": {
                    "type": "string",
                    "description": "IcmpType. Only supported when protocol is icmp. Default is 'any'."
                }
            },
            "description": "Application (service) for firewall rule."
        },
        "edgeVmStatus": {
            "type": "object",
            "properties": {
                "index": {
                    "type": "integer",
                    "description": "High Availability index of the appliance. Values are 0 and 1.",
                    "format": "int32"
                },
                "haState": {
                    "type": "string",
                    "description": "High Availability state of the appliance. Values are active and standby."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the NSX Edge appliance."
                },
                "id": {
                    "type": "string",
                    "description": "vCenter MOID of the NSX Edge appliance."
                },
                "edgeVMStatus": {
                    "type": "string",
                    "description": "NSX Edge appliance health status identified by GREY (unknown status), GREEN (health checks are successful), YELLOW (intermittent health check failure), RED (appliance not in serving state)."
                },
                "preRulesGenerationNumber": {
                    "type": "integer",
                    "description": "Value of the last published pre rules generation number.",
                    "format": "int64"
                }
            },
            "description": "Status of each of the deployed NSX Edge appliances."
        },
        "ScopeInfo": {
            "type": "object",
            "properties": {
                "objectTypeName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "IpsecSiteStats": {
            "type": "object",
            "properties": {
                "rxBytesOnSite": {
                    "type": "integer"
                },
                "tunnelStats": {
                    "items": {
                        "$ref": "#/definitions/IpsecTunnelStats"
                    },
                    "type": "array"
                },
                "ikeStatus": {
                    "$ref": "#/definitions/IpsecSiteIKEStatus"
                },
                "siteStatus": {
                    "type": "string"
                },
                "txBytesFromSite": {
                    "type": "integer"
                }
            }
        },
        "nsxsite": {
            "type": "object",
            "properties": {
                "secureTraffic": {
                    "type": "boolean",
                    "description": "Secure L2VPN traffic."
                },
                "siteId": {
                    "type": "string",
                    "description": "Identifier for L2 VPN site."
                },
                "name": {
                    "minLength": 1,
                    "type": "string",
                    "description": "Name of L2 VPN site. Length: 1-255 characters.",
                    "maxLength": 255
                },
                "password": {
                    "type": "string",
                    "description": "Password for L2 VPN user. Passwords must contain the following: 12-63 characters, a mix of upper case letters, lower case letters, numbers, and at least one special character. Password must not contain the username as a substring. Do not repeat a character 3 or more times."
                },
                "userId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "L2 VPN user ID. Valid user names: 1-63 characters, letters and numbers only. No white space or special characters.",
                    "maxLength": 63
                },
                "description": {
                    "type": "string",
                    "description": "Description of L2 VPN site."
                }
            },
            "description": "L2 VPN site."
        },
        "EsxConfig": {
            "required": [
                "num_hosts"
            ],
            "type": "object",
            "properties": {
                "availability_zone": {
                    "type": "string",
                    "description": "Availability zone where the hosts should be provisioned. (Can be specified only for privileged host operations)."
                },
                "esxs": {
                    "items": {
                        "type": "string",
                        "description": "An optional list of ESX IDs to remove."
                    },
                    "type": "array"
                },
                "cluster_id": {
                    "type": "string",
                    "description": "An optional cluster id if the esxs operation has to be on a specific cluster."
                },
                "num_hosts": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SddcConfig": {
            "discriminator": "provider",
            "required": [
                "provider",
                "name",
                "num_hosts"
            ],
            "type": "object",
            "properties": {
                "one_node_reduced_capacity": {
                    "type": "boolean",
                    "description": "Whether this sddc is reduced capacity 1NODE."
                },
                "vpc_cidr": {
                    "default": "10.0.0.0/16",
                    "type": "string",
                    "description": "AWS VPC IP range. Only prefix of 16 or 20 is currently supported."
                },
                "host_instance_type": {
                    "type": "string",
                    "description": "The instance type for the esx hosts in the primary cluster of the SDDC.\n",
                    "$ref": "#/definitions/HostInstanceTypes"
                },
                "skip_creating_vxlan": {
                    "type": "boolean",
                    "description": "skip creating vxlan for compute gateway for SDDC provisioning"
                },
                "vxlan_subnet": {
                    "type": "string",
                    "description": "VXLAN IP subnet in CIDR for compute gateway"
                },
                "size": {
                    "type": "string",
                    "description": "The size of the vCenter and NSX appliances. xlarge sddcSize corresponds to an 'extra_large' vCenter appliance\nand 'large' NSX appliance. 'medium' sddcSize corresponds to 'medium' vCenter appliance and 'medium'\nNSX appliance. Value defaults to 'medium'.\n"
                },
                "storage_capacity": {
                    "type": "integer",
                    "description": "The storage capacity value to be requested for the sddc primary cluster, in GiBs.\nIf provided, instead of using the direct-attached storage, a capacity value amount of seperable storage will\nbe used.\n",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "account_link_sddc_config": {
                    "items": {
                        "$ref": "#/definitions/AccountLinkSddcConfig"
                    },
                    "type": "array",
                    "description": "A list of the SDDC linking configurations to use."
                },
                "num_hosts": {
                    "type": "integer",
                    "format": "int32"
                },
                "sddc_type": {
                    "type": "string",
                    "description": "Denotes the sddc type , if the value is null or empty, the type is considered as default."
                },
                "account_link_config": {
                    "description": "The account linking configuration, we will keep this one and remove accountLinkSddcConfig finally.",
                    "$ref": "#/definitions/AccountLinkConfig"
                },
                "provider": {
                    "enum": [
                        "AWS",
                        "ZEROCLOUD"
                    ],
                    "type": "string",
                    "description": "Determines what additional properties are available based on cloud provider."
                },
                "sso_domain": {
                    "default": "vmc.local",
                    "type": "string",
                    "description": "The SSO domain name to use for vSphere users. If not specified, vmc.local will be used."
                },
                "sddc_template_id": {
                    "type": "string",
                    "description": "If provided, configuration from the template will applied to the provisioned SDDC.",
                    "format": "UUID"
                },
                "deployment_type": {
                    "enum": [
                        "SingleAZ",
                        "MultiAZ"
                    ],
                    "type": "string",
                    "description": "Denotes if request is for a SingleAZ or a MultiAZ SDDC. Default is SingleAZ."
                }
            }
        },
        "ConnectivityValidationGroups": {
            "type": "object",
            "properties": {
                "groups": {
                    "items": {
                        "$ref": "#/definitions/ConnectivityValidationGroup"
                    },
                    "type": "array",
                    "description": "List of groups."
                }
            }
        },
        "SddcPublicIp": {
            "required": [
                "public_ip"
            ],
            "type": "object",
            "properties": {
                "public_ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "allocation_id": {
                    "type": "string"
                },
                "dnat_rule_id": {
                    "type": "string"
                },
                "associated_private_ip": {
                    "type": "string"
                },
                "snat_rule_id": {
                    "type": "string"
                }
            }
        },
        "MaintenanceWindowGet": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MaintenanceWindow"
                },
                {
                    "properties": {
                        "duration_min": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "version": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                }
            ]
        },
        "Cluster": {
            "required": [
                "cluster_id"
            ],
            "type": "object",
            "properties": {
                "esx_host_list": {
                    "items": {
                        "$ref": "#/definitions/AwsEsxHost"
                    },
                    "type": "array"
                },
                "cluster_state": {
                    "enum": [
                        "DEPLOYING",
                        "ADDING_HOSTS",
                        "READY",
                        "FAILED"
                    ],
                    "type": "string"
                },
                "aws_kms_info": {
                    "type": "object",
                    "description": "AWS Key Management Service information associated with this cluster",
                    "$ref": "#/definitions/AwsKmsInfo"
                },
                "esx_host_info": {
                    "type": "object",
                    "description": "Information of the hosts added to this cluster",
                    "$ref": "#/definitions/EsxHostInfo"
                },
                "host_cpu_cores_count": {
                    "type": "integer",
                    "description": "Number of cores enabled on ESX hosts added to this cluster",
                    "format": "int32"
                },
                "cluster_capacity": {
                    "type": "object",
                    "description": "The capacity of this cluster.",
                    "$ref": "#/definitions/EntityCapacity"
                },
                "cluster_id": {
                    "type": "string"
                },
                "cluster_name": {
                    "type": "string"
                }
            }
        },
        "NsxtAddons": {
            "type": "object",
            "description": "Details the state of different NSX add-ons.",
            "properties": {
                "enable_nsx_advanced_addon": {
                    "type": "boolean",
                    "description": "Indicates whether NSX Advanced addon is enabled or disabled."
                }
            }
        },
        "sddcNetworkAddressGroups": {
            "type": "object",
            "properties": {
                "addressGroups": {
                    "items": {
                        "$ref": "#/definitions/sddcNetworkAddressGroup"
                    },
                    "type": "array",
                    "description": "List of logical network address groups."
                }
            },
            "description": "Logical network address groups."
        },
        "VpnTunnelStatus": {
            "type": "object",
            "properties": {
                "on_prem_subnet": {
                    "readOnly": true,
                    "type": "string"
                },
                "traffic_stats": {
                    "$ref": "#/definitions/VpnTunnelTrafficStats"
                },
                "last_info_message": {
                    "readOnly": true,
                    "type": "string"
                },
                "local_subnet": {
                    "readOnly": true,
                    "type": "string"
                },
                "tunnel_state": {
                    "readOnly": true,
                    "type": "string"
                },
                "failure_message": {
                    "readOnly": true,
                    "type": "string"
                },
                "tunnel_status": {
                    "readOnly": true,
                    "enum": [
                        "CONNECTED",
                        "DISCONNECTED",
                        "UNKNOWN"
                    ],
                    "type": "string"
                }
            }
        },
        "cbmStatistics": {
            "type": "object",
            "properties": {
                "dataDto": {
                    "description": "Statistics data.",
                    "$ref": "#/definitions/cbmStatsData"
                },
                "metaDto": {
                    "description": "Start time, end time and interval details.",
                    "$ref": "#/definitions/metaDashboardStats"
                }
            },
            "description": "NSX Edge Interface Statistics."
        },
        "ConnectivityValidationGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "enum": [
                        "HLM",
                        "DRAAS"
                    ],
                    "type": "string",
                    "description": "test group id, currently, only HLM."
                },
                "name": {
                    "type": "string",
                    "description": "Name of the test group."
                },
                "sub_groups": {
                    "items": {
                        "$ref": "#/definitions/ConnectivityValidationSubGroup"
                    },
                    "type": "array",
                    "description": "List of sub groups."
                }
            }
        },
        "SddcId": {
            "type": "object",
            "properties": {
                "sddc_id": {
                    "type": "string",
                    "description": "Sddc ID"
                }
            }
        },
        "IpsecSiteIKEStatus": {
            "type": "object",
            "properties": {
                "channelStatus": {
                    "type": "string"
                },
                "channelState": {
                    "type": "string"
                },
                "peerIpAddress": {
                    "type": "string"
                },
                "localIpAddress": {
                    "type": "string"
                },
                "peerSubnets": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "peerId": {
                    "type": "string"
                },
                "lastInformationalMessage": {
                    "type": "string"
                },
                "localSubnets": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            }
        },
        "SupportWindow": {
            "type": "object",
            "properties": {
                "start_day": {
                    "enum": [
                        "MONDAY",
                        "TUESDAY",
                        "WEDNESDAY",
                        "THURSDAY",
                        "FRIDAY",
                        "SATURDAY",
                        "SUNDAY"
                    ],
                    "type": "string"
                },
                "seats": {
                    "type": "integer",
                    "format": "int64"
                },
                "sddcs": {
                    "items": {
                        "type": "string",
                        "format": "UUID"
                    },
                    "type": "array",
                    "description": "SDDCs in this window"
                },
                "duration_hours": {
                    "type": "integer",
                    "format": "int64"
                },
                "start_hour": {
                    "type": "integer",
                    "format": "int32"
                },
                "support_window_id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object"
                }
            }
        },
        "application": {
            "type": "object",
            "properties": {
                "applicationId": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "List of string. Id of service or serviceGroup groupingObject. Can define multiple."
                },
                "service": {
                    "items": {
                        "$ref": "#/definitions/nsxfirewallservice"
                    },
                    "type": "array",
                    "description": "List of protocol and ports. Can define multiple."
                }
            },
            "description": "Application for firewall rule"
        },
        "firewallDashboardStats": {
            "type": "object",
            "properties": {
                "connections": {
                    "items": {
                        "$ref": "#/definitions/DashboardStat"
                    },
                    "type": "array",
                    "description": "Number of NSX Edge firewall connections and rules."
                }
            },
            "description": "Dashboard Statistics data for Firewall."
        },
        "nat": {
            "type": "object",
            "properties": {
                "rules": {
                    "description": "Ordered list of NAT rules.",
                    "$ref": "#/definitions/natRules"
                },
                "featureType": {
                    "type": "string"
                },
                "version": {
                    "type": "integer",
                    "description": "Version number tracking each configuration change. To avoid problems with overwriting changes, always retrieve and modify the latest configuration to include the current version number in your request. If you provide a version number which is not current, the request is rejected. If you omit the version number, the request is accepted but may overwrite any current changes if your change is not in sync with the latest change.",
                    "format": "int64"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Value is true if feature is enabled. Default value is true. Optional."
                },
                "template": {
                    "minLength": 0,
                    "type": "string",
                    "maxLength": 255
                }
            },
            "description": "NAT configuration"
        },
        "LogicalRouterScope": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "DataPageEdgeSummary": {
            "type": "object",
            "properties": {
                "pagingInfo": {
                    "$ref": "#/definitions/PagingInfo"
                },
                "data": {
                    "items": {
                        "$ref": "#/definitions/edgeSummary"
                    },
                    "type": "array"
                }
            }
        },
        "dnsForwarders": {
            "type": "object",
            "properties": {
                "ipAddress": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "IP addresses of the DNS servers."
                }
            },
            "description": "DNS forwarders."
        },
        "MacAddress": {
            "type": "object",
            "properties": {
                "edgeVmHaIndex": {
                    "minimum": 0,
                    "type": "integer",
                    "maximum": 1,
                    "format": "int32"
                },
                "value": {
                    "pattern": "^([0-9a-f]{2}([:]|$)){6}$",
                    "type": "string"
                }
            }
        },
        "dashboardData": {
            "type": "object",
            "properties": {
                "firewall": {
                    "description": "NSX Edge Firewall Statistics data.",
                    "$ref": "#/definitions/firewallDashboardStats"
                },
                "sslvpn": {
                    "description": "NSX Edge SSL VPN Statistics data.",
                    "$ref": "#/definitions/sslvpnDashboardStats"
                },
                "interfaces": {
                    "description": "NSX Edge Interface Statistics data.",
                    "$ref": "#/definitions/interfacesDashboardStats"
                },
                "loadBalancer": {
                    "description": "NSX Edge Load Balancer Statistics data.",
                    "$ref": "#/definitions/loadBalancerDashboardStats"
                },
                "ipsec": {
                    "description": "NSX Edge Ipsec Statistics data.",
                    "$ref": "#/definitions/ipsecDashboardStats"
                }
            },
            "description": "Dashboard Statistics data."
        },
        "licenceAclPermissions": {
            "type": "object",
            "properties": {
                "dataPermission": {
                    "description": "Data access control information for the feature.",
                    "$ref": "#/definitions/DataPermissions"
                },
                "isLicensed": {
                    "type": "boolean",
                    "description": "Value is true if feature is licenced."
                },
                "accessPermission": {
                    "description": "Access control information for the feature.",
                    "$ref": "#/definitions/InteractionPermissions"
                }
            },
            "description": "Licence and access control information for the feature."
        },
        "ReservationSchedule": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/MaintenanceWindowGet"
                },
                {
                    "properties": {
                        "reservations": {
                            "items": {
                                "$ref": "#/definitions/Reservation"
                            },
                            "type": "array"
                        },
                        "reservations_mw": {
                            "items": {
                                "$ref": "#/definitions/ReservationInMw"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "AccountLinkSddcConfig": {
            "type": "object",
            "properties": {
                "customer_subnet_ids": {
                    "items": {
                        "type": "string",
                        "description": "The ID of the subnet to use."
                    },
                    "type": "array"
                },
                "connected_account_id": {
                    "type": "string",
                    "description": "The ID of the customer connected account to work with."
                }
            }
        },
        "keyValueAttributes": {
            "type": "object",
            "properties": {
                "value": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Value corresponding to the key of the configuration limit parameter.",
                    "maxLength": 255
                },
                "key": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Key name of the configuration limit parameter.",
                    "maxLength": 255
                }
            },
            "description": "Key value pair describing the feature configuration limit."
        },
        "nsxnatrule": {
            "type": "object",
            "properties": {
                "vnic": {
                    "type": "string",
                    "description": "Interface on which the NAT rule is applied."
                },
                "ruleType": {
                    "type": "string",
                    "description": "Identifies the type of the rule. internal_high or user."
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol. Default is 'any'"
                },
                "description": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Description for the rule.",
                    "maxLength": 1024
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Identifier for the rule.",
                    "format": "int64"
                },
                "snatMatchDestinationPort": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Apply SNAT rule only if traffic has this destination port. Default is 'any'.",
                    "maxLength": 255
                },
                "originalAddress": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Original address or address range. This is the original source address for SNAT rules and the original destination address for DNAT rules.",
                    "maxLength": 255
                },
                "dnatMatchSourceAddress": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Apply DNAT rule only if traffic has this source address. Default is 'any'.",
                    "maxLength": 255
                },
                "dnatMatchSourcePort": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Apply DNAT rule only if traffic has this source port. Default is 'any'.",
                    "maxLength": 255
                },
                "snatMatchDestinationAddress": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Apply SNAT rule only if traffic has this destination address. Default is 'any'.",
                    "maxLength": 255
                },
                "originalPort": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Original port. This is the original source port for SNAT rules, and the original destination port for DNAT rules.",
                    "maxLength": 255
                },
                "loggingEnabled": {
                    "type": "boolean",
                    "description": "Enable logging for the rule."
                },
                "translatedAddress": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Translated address or address range.",
                    "maxLength": 255
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable rule."
                },
                "icmpType": {
                    "type": "string",
                    "description": "ICMP type. Only supported when protocol is icmp. Default is 'any'."
                },
                "translatedPort": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Translated port. Supported in DNAT rules only.",
                    "maxLength": 255
                },
                "action": {
                    "type": "string",
                    "description": "Action for the rule. SNAT or DNAT."
                },
                "ruleTag": {
                    "type": "integer",
                    "description": "Rule tag. Used to specify user-defined ruleId. If not specified NSX Manager will generate ruleId.",
                    "format": "int64"
                }
            },
            "description": "NAT rule"
        },
        "subInterface": {
            "required": [
                "tunnelId"
            ],
            "type": "object",
            "properties": {
                "index": {
                    "type": "integer",
                    "description": "Index of the sub interface assigned by NSX Manager. Min value is 10 and max value is 4103.",
                    "maximum": 4103,
                    "format": "int32"
                },
                "tunnelId": {
                    "minimum": 1,
                    "type": "integer",
                    "description": "Valid values for tunnel ID are min 1 to max 4093. Required.",
                    "maximum": 4094,
                    "format": "int32"
                },
                "name": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Name of the sub interface. Required.",
                    "maxLength": 255
                },
                "addressGroups": {
                    "description": "Address group configuration of the sub interface.",
                    "$ref": "#/definitions/edgeVnicAddressGroups"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "VLAN ID of the virtual LAN used by this sub interface. VLAN IDs can range from 0 to 4094.",
                    "format": "int32"
                },
                "label": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Sub interface label of format vNic_{index} provided by NSX Manager. Read only.",
                    "maxLength": 255
                },
                "logicalSwitchName": {
                    "type": "string",
                    "description": "Name of the logical switch connected to this sub interface."
                },
                "isConnected": {
                    "type": "boolean",
                    "description": "Value is true if the sub interface is connected to a logical switch, standard portgroup or distributed portgroup."
                },
                "mtu": {
                    "type": "integer",
                    "description": "MTU value of the sub interface. This value would be the least mtu for all the trunk interfaces of the NSX Edge. Default is 1500.",
                    "format": "int32"
                },
                "logicalSwitchId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "ID of the logical switch connected to this sub interface.",
                    "maxLength": 255
                },
                "enableSendRedirects": {
                    "type": "boolean",
                    "description": "Value is true if send redirects is enabled. Enable ICMP redirect to convey routing information to hosts."
                }
            },
            "description": "NSX Edge sub interface configuration details. Sub interfaces are created on a trunk interface."
        },
        "sddcNetworkAddressGroup": {
            "type": "object",
            "properties": {
                "prefixLength": {
                    "type": "string",
                    "description": "Prefix length of logical network."
                },
                "primaryAddress": {
                    "type": "string",
                    "description": "Primary address for logical network."
                }
            },
            "description": "Logical Network address group."
        },
        "GlcmBundle": {
            "type": "object",
            "description": "the GlcmBundle used for deploying the sddc",
            "properties": {
                "s3Bucket": {
                    "type": "string",
                    "description": "the glcmbundle's s3 bucket"
                },
                "id": {
                    "type": "string",
                    "description": "the glcmbundle's id"
                }
            }
        },
        "Site": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Site password."
                },
                "user_id": {
                    "type": "string",
                    "description": "Site user id."
                },
                "name": {
                    "type": "string",
                    "description": "Unique name for the site getting configured."
                },
                "rx_bytes_on_local_subnet": {
                    "readOnly": true,
                    "type": "integer",
                    "description": "Bytes received on local network.",
                    "format": "int64"
                },
                "secure_traffic": {
                    "type": "boolean",
                    "description": "Enable/disable encription."
                },
                "established_date": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Date tunnel was established."
                },
                "failure_message": {
                    "readOnly": true,
                    "type": "string",
                    "description": "failure message."
                },
                "dropped_tx_packets": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Number of transmitted packets dropped."
                },
                "dropped_rx_packets": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Number of received packets dropped."
                },
                "tunnel_status": {
                    "readOnly": true,
                    "enum": [
                        "CONNECTED",
                        "DISCONNECTED",
                        "UNKNOWN"
                    ],
                    "type": "string",
                    "description": "Site tunnel status."
                },
                "tx_bytes_from_local_subnet": {
                    "readOnly": true,
                    "type": "integer",
                    "description": "Bytes transmitted from local subnet.",
                    "format": "int64"
                }
            }
        },
        "ConnectivityAgentValidation": {
            "type": "object",
            "properties": {
                "source": {
                    "enum": [
                        "VCENTER",
                        "SRM",
                        "VR"
                    ],
                    "type": "string",
                    "description": "source appliance of connectivity test, i.e. VCENTER, SRM, VR."
                },
                "type": {
                    "enum": [
                        "PING",
                        "TRACEROUTE",
                        "DNS",
                        "CONNECTIVITY",
                        "CURL"
                    ],
                    "type": "string",
                    "description": "type of connectivity test, i.e. PING, TRACEROUTE, DNS, CONNECTIVITY, CURL. For CONNECTIVITY and CURL tests only, please specify the ports to be tested against."
                },
                "ports": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "TCP ports ONLY for CONNECTIVITY and CURL tests."
                },
                "path": {
                    "type": "string",
                    "description": "URL path ONLY for CURL tests."
                }
            }
        },
        "AwsCloudProvider": {
            "type": "object",
            "x-vmw-vapi-discriminated-by": "AWS",
            "allOf": [
                {
                    "$ref": "#/definitions/CloudProvider"
                },
                {
                    "properties": {
                        "regions": {
                            "items": {
                                "type": "string",
                                "description": "Regions supported by the cloud provider for sddc deployment"
                            },
                            "type": "array"
                        }
                    }
                }
            ]
        },
        "pagedEdgeList": {
            "type": "object",
            "properties": {
                "edgePage": {
                    "description": "Page details with matched records.",
                    "$ref": "#/definitions/DataPageEdgeSummary"
                }
            },
            "description": "NSX Edges listed by pages."
        },
        "PopAmiInfo": {
            "allOf": [
                {
                    "$ref": "#/definitions/AmiInfo"
                },
                {
                    "properties": {
                        "type": {
                            "default": "POP",
                            "enum": [
                                "CENTOS",
                                "POP"
                            ],
                            "type": "string",
                            "description": "PoP AMI type. CENTOS: a Centos AMI; POP: a PoP AMI."
                        }
                    }
                }
            ]
        },
        "AwsKmsInfo": {
            "required": [
                "amazon_resource_name"
            ],
            "type": "object",
            "properties": {
                "amazon_resource_name": {
                    "type": "string",
                    "description": "The ARN associated with the customer master key for this cluster."
                }
            }
        }
    },
    "security": [
        {
            "api_key": []
        }
    ],
    "swagger": "2.0",
    "consumes": [
        "application/json"
    ]
}